ARM Linker, 5.03 [Build 76] [MDK-ARM Professional]

==============================================================================

Section Cross References

    start.o(RESET) refers to start.o(STACK) for Stack_Top
    start.o(RESET) refers to __main.o(!!!main) for __main
    start.o(.text) refers to start.o(HEAP) for Heap_Mem
    start.o(.text) refers to start.o(STACK) for Stack_Mem
    clock.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    clock.o(.text) refers to thread.o(.text) for rt_thread_self
    clock.o(.text) refers to timer.o(.text) for rt_timer_check
    clock.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    clock.o(.text) refers to clock.o(.data) for rt_tick
    clock.o(RTMSymTab) refers to clock.o(.text) for rt_tick_get
    clock.o(RTMSymTab) refers to clock.o(.constdata) for __rtmsym_rt_tick_get_name
    device.o(.text) refers to thread.o(.text) for rt_thread_self
    device.o(.text) refers to scheduler.o(.text) for rt_enter_critical
    device.o(.text) refers to kservice.o(.text) for rt_strncmp
    device.o(.text) refers to object.o(.text) for rt_object_init
    device.o(.text) refers to object.o(.data) for rt_object_container
    device.o(RTMSymTab) refers to device.o(.text) for rt_device_register
    device.o(RTMSymTab) refers to device.o(.constdata) for __rtmsym_rt_device_register_name
    idle.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    idle.o(.text) refers to object.o(.text) for rt_object_is_systemobject
    idle.o(.text) refers to mem.o(.text) for rt_free
    idle.o(.text) refers to module.o(.text) for rt_module_destroy
    idle.o(.text) refers to thread.o(.text) for rt_thread_init
    idle.o(.text) refers to idle.o(.data) for rt_thread_idle_hook
    idle.o(.text) refers to scheduler.o(.data) for rt_thread_defunct
    idle.o(.text) refers to idle.o(.bss) for rt_thread_stack
    ipc.o(.text) refers to thread.o(.text) for rt_thread_suspend
    ipc.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(.text) refers to object.o(.text) for rt_object_init
    ipc.o(.text) refers to timer.o(.text) for rt_timer_control
    ipc.o(.text) refers to scheduler.o(.text) for rt_schedule
    ipc.o(.text) refers to mem.o(.text) for rt_malloc
    ipc.o(.text) refers to clock.o(.text) for rt_tick_get
    ipc.o(.text) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    ipc.o(.text) refers to kservice.o(.text) for rt_memcpy
    ipc.o(RTMSymTab) refers to ipc.o(.text) for rt_sem_init
    ipc.o(RTMSymTab) refers to ipc.o(.constdata) for __rtmsym_rt_sem_init_name
    irq.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    irq.o(.text) refers to irq.o(.data) for rt_interrupt_nest
    irq.o(RTMSymTab) refers to irq.o(.text) for rt_interrupt_enter
    irq.o(RTMSymTab) refers to irq.o(.constdata) for __rtmsym_rt_interrupt_enter_name
    irq.o(RTMSymTab) refers to context.o(.text) for rt_hw_interrupt_disable
    kservice.o(.text) refers to irq.o(.text) for rt_interrupt_get_nest
    kservice.o(.text) refers to thread.o(.text) for rt_thread_self
    kservice.o(.text) refers to mem.o(.text) for rt_malloc
    kservice.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    kservice.o(.text) refers to kservice.o(.data) for _errno
    kservice.o(.text) refers to kservice.o(.constdata) for large_digits
    kservice.o(.text) refers to device.o(.text) for rt_device_write
    kservice.o(.text) refers to kservice.o(.bss) for rt_log_buf
    kservice.o(RTMSymTab) refers to kservice.o(.text) for rt_get_errno
    kservice.o(RTMSymTab) refers to kservice.o(.constdata) for __rtmsym_rt_get_errno_name
    mem.o(.text) refers to kservice.o(.text) for rt_kprintf
    mem.o(.text) refers to ipc.o(.text) for rt_sem_init
    mem.o(.text) refers to mem.o(.data) for rt_malloc_hook
    mem.o(.text) refers to mem.o(.bss) for heap_sem
    mem.o(RTMSymTab) refers to mem.o(.text) for rt_malloc
    mem.o(RTMSymTab) refers to mem.o(.constdata) for __rtmsym_rt_malloc_name
    mempool.o(.text) refers to object.o(.text) for rt_object_init
    mempool.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    mempool.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    mempool.o(.text) refers to thread.o(.text) for rt_thread_resume
    mempool.o(.text) refers to mem.o(.text) for rt_malloc
    mempool.o(.text) refers to kservice.o(.text) for rt_set_errno
    mempool.o(.text) refers to clock.o(.text) for rt_tick_get
    mempool.o(.text) refers to timer.o(.text) for rt_timer_control
    mempool.o(.text) refers to scheduler.o(.text) for rt_schedule
    mempool.o(.text) refers to mempool.o(.data) for rt_mp_alloc_hook
    mempool.o(RTMSymTab) refers to mempool.o(.text) for rt_mp_init
    mempool.o(RTMSymTab) refers to mempool.o(.constdata) for __rtmsym_rt_mp_init_name
    module.o(.text) refers to kservice.o(.text) for rt_strcmp
    module.o(.text) refers to thread.o(.text) for rt_thread_self
    module.o(.text) refers to object.o(.text) for rt_object_allocate
    module.o(.text) refers to mem.o(.text) for rt_malloc
    module.o(.text) refers to module.o(.data) for _rt_module_symtab_begin
    module.o(.text) refers to ipc.o(.text) for rt_sem_detach
    module.o(.text) refers to mempool.o(.text) for rt_mp_detach
    module.o(.text) refers to device.o(.text) for rt_device_unregister
    module.o(.text) refers to timer.o(.text) for rt_timer_detach
    module.o(.text) refers to scheduler.o(.text) for rt_enter_critical
    module.o(.text) refers to object.o(.data) for rt_object_container
    object.o(.text) refers to module.o(.text) for rt_module_self
    object.o(.text) refers to kservice.o(.text) for rt_strncpy
    object.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    object.o(.text) refers to mem.o(.text) for rt_malloc
    object.o(.text) refers to scheduler.o(.text) for rt_enter_critical
    object.o(.text) refers to object.o(.data) for rt_object_attach_hook
    object.o(RTMSymTab) refers to object.o(.text) for rt_object_get_information
    object.o(RTMSymTab) refers to object.o(.constdata) for __rtmsym_rt_object_get_information_name
    scheduler.o(.text) refers to kservice.o(.text) for rt_kprintf
    scheduler.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(.text) refers to scheduler.o(.data) for rt_scheduler_hook
    scheduler.o(.text) refers to scheduler.o(.bss) for rt_thread_priority_table
    scheduler.o(.text) refers to irq.o(.data) for rt_interrupt_nest
    thread.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(.text) refers to scheduler.o(.text) for rt_schedule_remove_thread
    thread.o(.text) refers to timer.o(.text) for rt_timer_detach
    thread.o(.text) refers to object.o(.text) for rt_object_is_systemobject
    thread.o(.text) refers to kservice.o(.text) for rt_memset
    thread.o(.text) refers to stack.o(.text) for rt_hw_stack_init
    thread.o(.text) refers to mem.o(.text) for rt_malloc
    thread.o(.text) refers to scheduler.o(.data) for rt_current_thread
    thread.o(.text) refers to scheduler.o(.bss) for rt_thread_priority_table
    thread.o(.text) refers to object.o(.data) for rt_object_container
    thread.o(RTMSymTab) refers to thread.o(.text) for rt_thread_init
    thread.o(RTMSymTab) refers to thread.o(.constdata) for __rtmsym_rt_thread_init_name
    timer.o(.text) refers to object.o(.text) for rt_object_init
    timer.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(.text) refers to clock.o(.text) for rt_tick_get
    timer.o(.text) refers to timer.o(.data) for rt_timer_timeout_hook
    timer.o(.text) refers to object.o(.data) for rt_object_take_hook
    timer.o(RTMSymTab) refers to timer.o(.text) for rt_timer_init
    timer.o(RTMSymTab) refers to timer.o(.constdata) for __rtmsym_rt_timer_init_name
    board.o(.text) refers to clock.o(.text) for rt_tick_increase
    board.o(.text) refers to serial.o(.text) for rt_hw_serial_isr
    board.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    board.o(.text) refers to interrupt.o(.text) for rt_hw_interrupt_install
    board.o(.text) refers to system_clock.o(.text) for rt_hw_clock_init
    board.o(.text) refers to board.o(.bss) for uart0_device
    board.o(.text) refers to board.o(.data) for uart0
    board.o(.text) refers to system_clock.o(.data) for PCLK
    board.o(.data) refers to board.o(.bss) for uart0_int_rx
    cpu.o(.text) refers to kservice.o(.text) for rt_kprintf
    cpu.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    interrupt.o(.text) refers to kservice.o(.text) for rt_kprintf
    interrupt.o(.text) refers to interrupt.o(.bss) for isr_table
    interrupt.o(.text) refers to irq.o(.data) for rt_interrupt_nest
    interrupt.o(.text) refers to interrupt.o(.data) for rt_interrupt_from_thread
    main.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    main.o(.text) refers to cpu.o(.text) for rt_hw_cpu_icache_enable
    main.o(.text) refers to interrupt.o(.text) for rt_hw_interrupt_init
    main.o(.text) refers to board.o(.text) for rt_hw_board_init
    main.o(.text) refers to kservice.o(.text) for rt_show_version
    serial.o(.text) refers to kservice.o(.text) for rt_memset
    serial.o(.text) refers to context.o(.text) for rt_hw_interrupt_disable
    serial.o(.text) refers to device.o(.text) for rt_device_register
    system_clock.o(.text) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    system_clock.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    system_clock.o(.text) refers to system_clock.o(.data) for FCLK
    context.o(.text) refers to interrupt.o(.data) for rt_thread_switch_interrupt_flag
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div2
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div2
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to start.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing idle.o(.text), (508 bytes).
    Removing idle.o(.bss), (444 bytes).
    Removing idle.o(.data), (4 bytes).
    Removing mmu.o(.text), (776 bytes).

4 unused section(s) (total 1732 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

4 Veneer(s) (total 28 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\clock.c 0x00000000   Number         0  clock.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\device.c 0x00000000   Number         0  device.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\idle.c  0x00000000   Number         0  idle.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\ipc.c   0x00000000   Number         0  ipc.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\irq.c   0x00000000   Number         0  irq.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\kservice.c 0x00000000   Number         0  kservice.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\mem.c   0x00000000   Number         0  mem.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\memheap.c 0x00000000   Number         0  memheap.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\mempool.c 0x00000000   Number         0  mempool.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\module.c 0x00000000   Number         0  module.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\object.c 0x00000000   Number         0  object.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\scheduler.c 0x00000000   Number         0  scheduler.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\slab.c  0x00000000   Number         0  slab.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\thread.c 0x00000000   Number         0  thread.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\timer.c 0x00000000   Number         0  timer.o ABSOLUTE
    ..\..\..\..\mcu\s3c2440\start.S          0x00000000   Number         0  start.o ABSOLUTE
    ..\..\board.c                            0x00000000   Number         0  board.o ABSOLUTE
    ..\..\context.S                          0x00000000   Number         0  context.o ABSOLUTE
    ..\..\cpu.c                              0x00000000   Number         0  cpu.o ABSOLUTE
    ..\..\interrupt.c                        0x00000000   Number         0  interrupt.o ABSOLUTE
    ..\..\main.c                             0x00000000   Number         0  main.o ABSOLUTE
    ..\..\mmu.c                              0x00000000   Number         0  mmu.o ABSOLUTE
    ..\..\serial.c                           0x00000000   Number         0  serial.o ABSOLUTE
    ..\..\stack.c                            0x00000000   Number         0  stack.o ABSOLUTE
    ..\..\system_clock.c                     0x00000000   Number         0  system_clock.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x30000000   Section      172  start.o(RESET)
    Undef_Handler                            0x3000003c   ARM Code       4  start.o(RESET)
    SWI_Handler                              0x30000040   ARM Code       4  start.o(RESET)
    PAbt_Handler                             0x30000044   ARM Code       4  start.o(RESET)
    DAbt_Handler                             0x30000048   ARM Code       4  start.o(RESET)
    FIQ_Handler                              0x30000050   ARM Code       4  start.o(RESET)
    !!!main                                  0x300000ac   Section        8  __main.o(!!!main)
    !!!scatter                               0x300000b4   Section       60  __scatter.o(!!!scatter)
    !!dczerorl2                              0x300000f0   Section       92  __dczerorl2.o(!!dczerorl2)
    _decompress_loop                         0x300000fb   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_zerolen                      0x30000109   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_litn                         0x30000111   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_lit                          0x30000115   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_copyorzero                   0x30000121   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_zero                         0x30000129   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_copyn                        0x30000133   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_copy                         0x3000013b   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    _decompress_end                          0x30000147   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    !!handler_copy                           0x3000014c   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x30000174   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x300001a8   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000008          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    .ARM.Collect$$libinit$$0000000A          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000F          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$0000002A          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    .ARM.Collect$$libinit$$0000002C          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x300001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000031          0x300001aa   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000031)
    .ARM.Collect$$libshutdown$$00000000      0x300001c0   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x300001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x300001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x300001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x300001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x300001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x300001c4   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x300001cc   Section        0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x300001cc   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x300001cc   Section        8  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x300001d4   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x300001d4   Section        4  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x300001d8   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x300001d8   Section       40  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x30000204   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x30000208   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x30000208   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x3000020c   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x30000214   Section       32  start.o(.text)
    .text                                    0x30000234   Section        0  clock.o(.text)
    .text                                    0x300002e8   Section        0  device.o(.text)
    .text                                    0x3000073c   Section        0  ipc.o(.text)
    rt_list_insert_before                    0x3000073c   ARM Code      28  ipc.o(.text)
    rt_ipc_list_suspend                      0x30000758   ARM Code     168  ipc.o(.text)
    rt_ipc_list_resume_all                   0x30000800   ARM Code      80  ipc.o(.text)
    rt_list_init                             0x30001f38   ARM Code      12  ipc.o(.text)
    rt_list_isempty                          0x30001f44   ARM Code      32  ipc.o(.text)
    rt_ipc_object_init                       0x30001f64   ARM Code      28  ipc.o(.text)
    rt_ipc_list_resume                       0x30001f80   ARM Code      36  ipc.o(.text)
    .text                                    0x30001fa4   Section        0  irq.o(.text)
    .text                                    0x30002014   Section        0  kservice.o(.text)
    print_number                             0x3000250c   ARM Code     592  kservice.o(.text)
    skip_atoi                                0x3000275c   ARM Code      64  kservice.o(.text)
    .text                                    0x3000312c   Section        0  mem.o(.text)
    plug_holes                               0x30003144   ARM Code     228  mem.o(.text)
    .text                                    0x30003924   Section        0  mempool.o(.text)
    rt_list_init                             0x30003de0   ARM Code      12  mempool.o(.text)
    rt_list_isempty                          0x30003dec   ARM Code      32  mempool.o(.text)
    .text                                    0x30003e14   Section        0  module.o(.text)
    rt_module_symbol_find                    0x30003e34   ARM Code      80  module.o(.text)
    rt_module_arm_relocate                   0x30003eac   ARM Code     664  module.o(.text)
    _load_shared_object                      0x30004244   ARM Code    1556  module.o(.text)
    _load_relocated_object                   0x30004858   ARM Code    2004  module.o(.text)
    _rt_module_split_arg                     0x30005224   ARM Code     284  module.o(.text)
    module_main_entry                        0x30005340   ARM Code     124  module.o(.text)
    rt_list_init                             0x30005900   ARM Code      12  module.o(.text)
    .text                                    0x30005914   Section        0  object.o(.text)
    rt_list_insert_after                     0x30005914   ARM Code      28  object.o(.text)
    rt_list_remove                           0x30005930   ARM Code      32  object.o(.text)
    .text                                    0x30005d9c   Section        0  scheduler.o(.text)
    _rt_scheduler_stack_check                0x30005da8   ARM Code     124  scheduler.o(.text)
    rt_list_init                             0x30006234   ARM Code      12  scheduler.o(.text)
    .text                                    0x30006240   Section        0  thread.o(.text)
    rt_list_insert_after                     0x30006240   ARM Code      28  thread.o(.text)
    rt_list_remove                           0x3000625c   ARM Code      32  thread.o(.text)
    rt_thread_exit                           0x3000627c   ARM Code     116  thread.o(.text)
    _rt_thread_init                          0x30006320   ARM Code     196  thread.o(.text)
    .text                                    0x3000690c   Section        0  timer.o(.text)
    rt_list_insert_after                     0x3000690c   ARM Code      28  timer.o(.text)
    _rt_timer_init                           0x30006934   ARM Code     100  timer.o(.text)
    rt_timer_list_next_timeout               0x30006998   ARM Code      52  timer.o(.text)
    _rt_timer_remove                         0x300069cc   ARM Code      76  timer.o(.text)
    rt_list_init                             0x30006ee4   ARM Code      12  timer.o(.text)
    rt_list_isempty                          0x30006ef0   ARM Code      32  timer.o(.text)
    .text                                    0x30006f24   Section        0  board.o(.text)
    rt_timer_handler                         0x30006f24   ARM Code      24  board.o(.text)
    rt_serial0_handler                       0x30006f3c   ARM Code      84  board.o(.text)
    rt_serial2_handler                       0x30006f90   ARM Code      84  board.o(.text)
    rt_hw_uart_init                          0x30006fe4   ARM Code     364  board.o(.text)
    rt_hw_timer_init                         0x30007150   ARM Code     180  board.o(.text)
    .text                                    0x30007260   Section        0  cpu.o(.text)
    cache_enable                             0x30007330   ARM Code      16  cpu.o(.text)
    cache_disable                            0x30007340   ARM Code      16  cpu.o(.text)
    .text                                    0x30007360   Section        0  interrupt.o(.text)
    rt_hw_interrupt_handle                   0x30007360   ARM Code      32  interrupt.o(.text)
    .text                                    0x30007568   Section        0  main.o(.text)
    .text                                    0x30007590   Section        0  serial.o(.text)
    rt_serial_init                           0x30007590   ARM Code     144  serial.o(.text)
    rt_serial_savechar                       0x30007620   ARM Code     168  serial.o(.text)
    rt_serial_open                           0x300076c8   ARM Code      12  serial.o(.text)
    rt_serial_close                          0x300076d4   ARM Code      12  serial.o(.text)
    rt_serial_read                           0x300076e0   ARM Code     284  serial.o(.text)
    rt_serial_write                          0x300077fc   ARM Code     312  serial.o(.text)
    rt_serial_control                        0x30007934   ARM Code      68  serial.o(.text)
    .text                                    0x30007ab4   Section        0  stack.o(.text)
    .text                                    0x30007b94   Section        0  system_clock.o(.text)
    .text                                    0x30007da0   Section      156  context.o(.text)
    .text                                    0x30007e3c   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x30007e68   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div5                               0x30007e8c   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div2                               0x30007eb0   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x30007eec   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x30007fbc   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x3000801c   Section        0  exit.o(.text)
    .text                                    0x30008028   Section       12  libspace.o(.text)
    .text                                    0x3000803c   Section        0  sys_exit.o(.text)
    .text                                    0x30008048   Section        4  use_no_semi.o(.text)
    .text                                    0x3000804c   Section        0  indicate_semi.o(.text)
    .text_udiv                               0x3000804c   Section       36  aeabi_sdiv.o(.text_udiv)
    .constdata                               0x30008070   Section       37  clock.o(.constdata)
    .constdata                               0x30008095   Section      187  device.o(.constdata)
    .constdata                               0x30008150   Section      529  ipc.o(.constdata)
    .constdata                               0x30008361   Section      107  irq.o(.constdata)
    .constdata                               0x300083cc   Section      613  kservice.o(.constdata)
    small_digits                             0x3000860f   Data          17  kservice.o(.constdata)
    large_digits                             0x30008620   Data          17  kservice.o(.constdata)
    .constdata                               0x30008631   Section       39  mem.o(.constdata)
    .constdata                               0x30008658   Section       73  mempool.o(.constdata)
    .constdata                               0x300086a1   Section       26  object.o(.constdata)
    .constdata                               0x300086bb   Section      217  thread.o(.constdata)
    .constdata                               0x30008794   Section      108  timer.o(.constdata)
    RTMSymTab                                0x30008800   Section       16  clock.o(RTMSymTab)
    RTMSymTab                                0x30008810   Section       80  device.o(RTMSymTab)
    RTMSymTab                                0x30008860   Section      304  ipc.o(RTMSymTab)
    RTMSymTab                                0x30008990   Section       40  irq.o(RTMSymTab)
    RTMSymTab                                0x300089b8   Section      200  kservice.o(RTMSymTab)
    RTMSymTab                                0x30008a80   Section       32  mem.o(RTMSymTab)
    RTMSymTab                                0x30008aa0   Section       48  mempool.o(RTMSymTab)
    RTMSymTab                                0x30008ad0   Section        8  object.o(RTMSymTab)
    RTMSymTab                                0x30008ad8   Section      104  thread.o(RTMSymTab)
    RTMSymTab                                0x30008b40   Section       56  timer.o(RTMSymTab)
    .data                                    0x30008ba8   Section        4  clock.o(.data)
    rt_tick                                  0x30008ba8   Data           4  clock.o(.data)
    .data                                    0x30008bac   Section        1  irq.o(.data)
    .data                                    0x30008bb0   Section        8  kservice.o(.data)
    _console_device                          0x30008bb0   Data           4  kservice.o(.data)
    _errno                                   0x30008bb4   Data           4  kservice.o(.data)
    .data                                    0x30008bb8   Section       32  mem.o(.data)
    rt_malloc_hook                           0x30008bb8   Data           4  mem.o(.data)
    rt_free_hook                             0x30008bbc   Data           4  mem.o(.data)
    heap_ptr                                 0x30008bc0   Data           4  mem.o(.data)
    heap_end                                 0x30008bc4   Data           4  mem.o(.data)
    lfree                                    0x30008bc8   Data           4  mem.o(.data)
    mem_size_aligned                         0x30008bcc   Data           4  mem.o(.data)
    used_mem                                 0x30008bd0   Data           4  mem.o(.data)
    max_mem                                  0x30008bd4   Data           4  mem.o(.data)
    .data                                    0x30008bd8   Section        8  mempool.o(.data)
    rt_mp_alloc_hook                         0x30008bd8   Data           4  mempool.o(.data)
    rt_mp_free_hook                          0x30008bdc   Data           4  mempool.o(.data)
    .data                                    0x30008be0   Section       20  module.o(.data)
    _rt_module_symtab_begin                  0x30008be0   Data           4  module.o(.data)
    _rt_module_symtab_end                    0x30008be4   Data           4  module.o(.data)
    unsolved                                 0x30008be8   Data           4  module.o(.data)
    rt_module_load_hook                      0x30008bec   Data           4  module.o(.data)
    rt_module_unload_hook                    0x30008bf0   Data           4  module.o(.data)
    .data                                    0x30008bf4   Section      180  object.o(.data)
    rt_object_attach_hook                    0x30008c94   Data           4  object.o(.data)
    rt_object_detach_hook                    0x30008c98   Data           4  object.o(.data)
    .data                                    0x30008ca8   Section       28  scheduler.o(.data)
    rt_scheduler_lock_nest                   0x30008ca8   Data           2  scheduler.o(.data)
    rt_scheduler_hook                        0x30008cc0   Data           4  scheduler.o(.data)
    .data                                    0x30008cc4   Section       16  timer.o(.data)
    random_nr                                0x30008cc4   Data           4  timer.o(.data)
    rt_timer_list                            0x30008cc8   Data           8  timer.o(.data)
    rt_timer_timeout_hook                    0x30008cd0   Data           4  timer.o(.data)
    .data                                    0x30008cd4   Section       24  board.o(.data)
    .data                                    0x30008cec   Section       12  interrupt.o(.data)
    .data                                    0x30008cf8   Section       16  system_clock.o(.data)
    .bss                                     0x30008d08   Section      128  kservice.o(.bss)
    rt_log_buf                               0x30008d08   Data         128  kservice.o(.bss)
    .bss                                     0x30008d88   Section       60  mem.o(.bss)
    heap_sem                                 0x30008d88   Data          60  mem.o(.bss)
    .bss                                     0x30008dc4   Section     2080  scheduler.o(.bss)
    .bss                                     0x300095e4   Section      328  board.o(.bss)
    .bss                                     0x3000972c   Section     1408  interrupt.o(.bss)
    .bss                                     0x30009cac   Section       96  libspace.o(.bss)
    HEAP                                     0x30009d10   Section        0  start.o(HEAP)
    STACK                                    0x30009d10   Section     1160  start.o(STACK)
    Heap_Mem                                 0x30009d10   Data           0  start.o(HEAP)
    Stack_Mem                                0x30009d10   Data        1024  start.o(STACK)
    Stack_Top                                0x3000a198   Data           0  start.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    IRQ_Handler                              0x3000004c   ARM Code       4  start.o(RESET)
    Reset_Handler                            0x30000054   ARM Code       0  start.o(RESET)
    __main                                   0x300000ac   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x300000b4   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x300000b4   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x300000c8   ARM Code       0  __scatter.o(!!!scatter)
    __decompress                             0x300000f0   ARM Code      92  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x300000f0   ARM Code       0  __dczerorl2.o(!!dczerorl2)
    __scatterload_copy                       0x3000014c   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x30000174   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x300001a0   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x300001a9   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_argv_1                     0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    __rt_lib_init_atexit_1                   0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_clock_1                    0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_cpp_1                      0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_exceptions_1               0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_fp_1                       0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_getenv_1                   0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_heap_1                     0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    __rt_lib_init_lc_collate_1               0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_lc_ctype_1                 0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_monetary_1              0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_numeric_1               0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_time_1                  0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_rand_1                     0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_return                     0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000031)
    __rt_lib_init_signal_1                   0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_stdio_1                    0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_user_alloc_1               0x300001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x300001b8   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x300001c1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x300001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x300001cc   ARM Code       0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x300001cc   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x300001cc   ARM Code       0  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x300001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x300001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x300001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x300001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x30000201   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x30000204   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x30000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x30000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x3000020c   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x30000214   ARM Code       0  start.o(.text)
    rt_system_tick_init                      0x30000234   ARM Code       4  clock.o(.text)
    rt_tick_get                              0x30000238   ARM Code      12  clock.o(.text)
    rt_tick_set                              0x30000244   ARM Code      40  clock.o(.text)
    rt_tick_increase                         0x3000026c   ARM Code      80  clock.o(.text)
    rt_tick_from_millisecond                 0x300002bc   ARM Code      40  clock.o(.text)
    rt_device_find                           0x300002e8   ARM Code     132  device.o(.text)
    rt_device_register                       0x3000036c   ARM Code      96  device.o(.text)
    rt_device_unregister                     0x300003cc   ARM Code      28  device.o(.text)
    rt_device_init_all                       0x300003e8   ARM Code       8  device.o(.text)
    rt_device_init                           0x300003f0   ARM Code     108  device.o(.text)
    rt_device_open                           0x3000045c   ARM Code     220  device.o(.text)
    rt_device_close                          0x30000538   ARM Code     132  device.o(.text)
    rt_device_read                           0x300005bc   ARM Code     172  device.o(.text)
    rt_device_write                          0x30000668   ARM Code     112  device.o(.text)
    rt_device_control                        0x300006d8   ARM Code      68  device.o(.text)
    rt_device_set_rx_indicate                0x3000071c   ARM Code      16  device.o(.text)
    rt_device_set_tx_complete                0x3000072c   ARM Code      16  device.o(.text)
    rt_sem_init                              0x30000850   ARM Code      64  ipc.o(.text)
    rt_sem_detach                            0x30000890   ARM Code      36  ipc.o(.text)
    rt_sem_create                            0x300008b4   ARM Code      76  ipc.o(.text)
    rt_sem_delete                            0x30000900   ARM Code      36  ipc.o(.text)
    rt_sem_take                              0x30000924   ARM Code     280  ipc.o(.text)
    rt_sem_trytake                           0x30000a3c   ARM Code      28  ipc.o(.text)
    rt_sem_release                           0x30000a58   ARM Code     144  ipc.o(.text)
    rt_sem_control                           0x30000ae8   ARM Code      84  ipc.o(.text)
    rt_mutex_init                            0x30000b3c   ARM Code      84  ipc.o(.text)
    rt_mutex_detach                          0x30000b90   ARM Code      36  ipc.o(.text)
    rt_mutex_create                          0x30000bb4   ARM Code     100  ipc.o(.text)
    rt_mutex_delete                          0x30000c18   ARM Code      36  ipc.o(.text)
    rt_mutex_take                            0x30000c3c   ARM Code     384  ipc.o(.text)
    rt_mutex_release                         0x30000dbc   ARM Code     296  ipc.o(.text)
    rt_mutex_control                         0x30000ee4   ARM Code      12  ipc.o(.text)
    rt_event_init                            0x30000ef0   ARM Code      60  ipc.o(.text)
    rt_event_detach                          0x30000f2c   ARM Code      36  ipc.o(.text)
    rt_event_create                          0x30000f50   ARM Code      76  ipc.o(.text)
    rt_event_delete                          0x30000f9c   ARM Code      36  ipc.o(.text)
    rt_event_send                            0x30000fc0   ARM Code     316  ipc.o(.text)
    rt_event_recv                            0x300010fc   ARM Code     408  ipc.o(.text)
    rt_event_control                         0x30001294   ARM Code      80  ipc.o(.text)
    rt_mb_init                               0x300012e4   ARM Code      96  ipc.o(.text)
    rt_mb_detach                             0x30001344   ARM Code      44  ipc.o(.text)
    rt_mb_create                             0x30001370   ARM Code     144  ipc.o(.text)
    rt_mb_delete                             0x30001400   ARM Code      52  ipc.o(.text)
    rt_mb_send_wait                          0x30001434   ARM Code     460  ipc.o(.text)
    rt_mb_send                               0x30001600   ARM Code      36  ipc.o(.text)
    rt_mb_recv                               0x30001624   ARM Code     556  ipc.o(.text)
    rt_mb_control                            0x30001850   ARM Code      96  ipc.o(.text)
    rt_mq_init                               0x300018b0   ARM Code     176  ipc.o(.text)
    rt_mq_detach                             0x30001960   ARM Code      36  ipc.o(.text)
    rt_mq_delete                             0x30001984   ARM Code      44  ipc.o(.text)
    rt_mq_create                             0x300019b0   ARM Code     220  ipc.o(.text)
    rt_mq_send                               0x30001a8c   ARM Code     284  ipc.o(.text)
    rt_mq_urgent                             0x30001ba8   ARM Code     264  ipc.o(.text)
    rt_mq_recv                               0x30001cb0   ARM Code     508  ipc.o(.text)
    rt_mq_control                            0x30001eac   ARM Code     140  ipc.o(.text)
    rt_interrupt_enter                       0x30001fa4   ARM Code      48  irq.o(.text)
    rt_interrupt_leave                       0x30001fd4   ARM Code      48  irq.o(.text)
    rt_interrupt_get_nest                    0x30002004   ARM Code      12  irq.o(.text)
    rt_get_errno                             0x30002014   ARM Code      68  kservice.o(.text)
    rt_set_errno                             0x30002058   ARM Code      76  kservice.o(.text)
    _rt_errno                                0x300020a4   ARM Code      60  kservice.o(.text)
    rt_memset                                0x300020e0   ARM Code     128  kservice.o(.text)
    rt_memcpy                                0x30002160   ARM Code     168  kservice.o(.text)
    rt_memmove                               0x30002208   ARM Code     120  kservice.o(.text)
    rt_memcmp                                0x30002280   ARM Code      80  kservice.o(.text)
    rt_strlen                                0x300022d0   ARM Code      36  kservice.o(.text)
    rt_strstr                                0x300022f4   ARM Code     116  kservice.o(.text)
    rt_strcasecmp                            0x30002368   ARM Code      92  kservice.o(.text)
    rt_strncpy                               0x300023c4   ARM Code     104  kservice.o(.text)
    rt_strncmp                               0x3000242c   ARM Code      84  kservice.o(.text)
    rt_strcmp                                0x30002480   ARM Code      60  kservice.o(.text)
    rt_strdup                                0x300024bc   ARM Code      76  kservice.o(.text)
    rt_hw_console_output                     0x30002508   ARM Code       4  kservice.o(.text)
    rt_vsnprintf                             0x3000279c   ARM Code    1516  kservice.o(.text)
    rt_kprintf                               0x30002d88   ARM Code     180  kservice.o(.text)
    rt_show_version                          0x30002e3c   ARM Code      64  kservice.o(.text)
    rt_snprintf                              0x30002e7c   ARM Code      72  kservice.o(.text)
    rt_vsprintf                              0x30002ec4   ARM Code      40  kservice.o(.text)
    rt_sprintf                               0x30002eec   ARM Code      64  kservice.o(.text)
    rt_console_get_device                    0x30002f2c   ARM Code      12  kservice.o(.text)
    rt_console_set_device                    0x30002f38   ARM Code      96  kservice.o(.text)
    rt_malloc_align                          0x30002f98   ARM Code     252  kservice.o(.text)
    rt_free_align                            0x30003094   ARM Code      28  kservice.o(.text)
    __rt_ffs                                 0x300030b0   ARM Code     120  kservice.o(.text)
    rt_malloc_sethook                        0x3000312c   ARM Code      12  mem.o(.text)
    rt_free_sethook                          0x30003138   ARM Code      12  mem.o(.text)
    rt_system_heap_init                      0x30003228   ARM Code     280  mem.o(.text)
    rt_malloc                                0x30003340   ARM Code     748  mem.o(.text)
    rt_free                                  0x3000362c   ARM Code     220  mem.o(.text)
    rt_realloc                               0x30003708   ARM Code     416  mem.o(.text)
    rt_calloc                                0x300038a8   ARM Code      60  mem.o(.text)
    rt_memory_info                           0x300038e4   ARM Code      64  mem.o(.text)
    rt_mp_alloc_sethook                      0x30003924   ARM Code      12  mempool.o(.text)
    rt_mp_free_sethook                       0x30003930   ARM Code      12  mempool.o(.text)
    rt_mp_init                               0x3000393c   ARM Code     192  mempool.o(.text)
    rt_mp_detach                             0x300039fc   ARM Code     100  mempool.o(.text)
    rt_mp_create                             0x30003a60   ARM Code     232  mempool.o(.text)
    rt_mp_delete                             0x30003b48   ARM Code     108  mempool.o(.text)
    rt_mp_alloc                              0x30003bb4   ARM Code     376  mempool.o(.text)
    rt_mp_free                               0x30003d2c   ARM Code     180  mempool.o(.text)
    rt_system_module_init                    0x30003e14   ARM Code      32  module.o(.text)
    rt_module_self                           0x30003e84   ARM Code      40  module.o(.text)
    rt_module_init_object_container          0x30004144   ARM Code     232  module.o(.text)
    rt_module_load_sethook                   0x3000422c   ARM Code      12  module.o(.text)
    rt_module_unload_sethook                 0x30004238   ARM Code      12  module.o(.text)
    rt_module_load                           0x3000502c   ARM Code     504  module.o(.text)
    rt_module_do_main                        0x300053bc   ARM Code     416  module.o(.text)
    rt_module_destroy                        0x3000555c   ARM Code     660  module.o(.text)
    rt_module_unload                         0x300057f0   ARM Code     176  module.o(.text)
    rt_module_find                           0x300058a0   ARM Code      96  module.o(.text)
    rt_object_attach_sethook                 0x30005950   ARM Code      12  object.o(.text)
    rt_object_detach_sethook                 0x3000595c   ARM Code      12  object.o(.text)
    rt_object_trytake_sethook                0x30005968   ARM Code      12  object.o(.text)
    rt_object_take_sethook                   0x30005974   ARM Code      12  object.o(.text)
    rt_object_put_sethook                    0x30005980   ARM Code      12  object.o(.text)
    rt_system_object_init                    0x3000598c   ARM Code       4  object.o(.text)
    rt_object_get_information                0x30005990   ARM Code      16  object.o(.text)
    rt_object_init                           0x300059a0   ARM Code     160  object.o(.text)
    rt_object_detach                         0x30005a40   ARM Code      84  object.o(.text)
    rt_object_allocate                       0x30005a94   ARM Code     232  object.o(.text)
    rt_object_delete                         0x30005b7c   ARM Code      92  object.o(.text)
    rt_object_is_systemobject                0x30005bd8   ARM Code      32  object.o(.text)
    rt_object_find                           0x30005bf8   ARM Code     392  object.o(.text)
    rt_scheduler_sethook                     0x30005d9c   ARM Code      12  scheduler.o(.text)
    rt_system_scheduler_init                 0x30005e24   ARM Code     112  scheduler.o(.text)
    rt_system_scheduler_start                0x30005e94   ARM Code      76  scheduler.o(.text)
    rt_schedule                              0x30005ee0   ARM Code     352  scheduler.o(.text)
    rt_schedule_insert_thread                0x30006040   ARM Code     140  scheduler.o(.text)
    rt_schedule_remove_thread                0x300060cc   ARM Code     188  scheduler.o(.text)
    rt_enter_critical                        0x30006188   ARM Code      56  scheduler.o(.text)
    rt_exit_critical                         0x300061c0   ARM Code      96  scheduler.o(.text)
    rt_critical_level                        0x30006220   ARM Code      20  scheduler.o(.text)
    rt_thread_timeout                        0x300062f0   ARM Code      48  thread.o(.text)
    rt_thread_init                           0x300063e4   ARM Code      80  thread.o(.text)
    rt_thread_self                           0x30006434   ARM Code      12  thread.o(.text)
    rt_thread_resume                         0x30006440   ARM Code      80  thread.o(.text)
    rt_thread_startup                        0x30006490   ARM Code     104  thread.o(.text)
    rt_thread_detach                         0x300064f8   ARM Code      92  thread.o(.text)
    rt_thread_create                         0x30006554   ARM Code     136  thread.o(.text)
    rt_thread_delete                         0x300065dc   ARM Code      72  thread.o(.text)
    rt_thread_yield                          0x30006624   ARM Code     140  thread.o(.text)
    rt_thread_suspend                        0x300066b0   ARM Code      80  thread.o(.text)
    rt_thread_sleep                          0x30006700   ARM Code      96  thread.o(.text)
    rt_thread_delay                          0x30006760   ARM Code      24  thread.o(.text)
    rt_thread_control                        0x30006778   ARM Code     252  thread.o(.text)
    rt_thread_find                           0x30006874   ARM Code     132  thread.o(.text)
    rt_timer_timeout_sethook                 0x30006928   ARM Code      12  timer.o(.text)
    rt_timer_init                            0x30006a18   ARM Code      76  timer.o(.text)
    rt_timer_detach                          0x30006a64   ARM Code      52  timer.o(.text)
    rt_timer_create                          0x30006a98   ARM Code      92  timer.o(.text)
    rt_timer_delete                          0x30006af4   ARM Code      52  timer.o(.text)
    rt_timer_start                           0x30006b28   ARM Code     412  timer.o(.text)
    rt_timer_stop                            0x30006cc4   ARM Code     120  timer.o(.text)
    rt_timer_control                         0x30006d3c   ARM Code     124  timer.o(.text)
    rt_timer_check                           0x30006db8   ARM Code     232  timer.o(.text)
    rt_timer_next_timeout_tick               0x30006ea0   ARM Code      20  timer.o(.text)
    rt_system_timer_init                     0x30006eb4   ARM Code      44  timer.o(.text)
    rt_system_timer_thread_init              0x30006ee0   ARM Code       4  timer.o(.text)
    rt_hw_board_init                         0x30007204   ARM Code      28  board.o(.text)
    rt_hw_cpu_icache_enable                  0x30007260   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_icache_disable                 0x30007274   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_icache_status                  0x30007288   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_dcache_enable                  0x3000729c   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_dcache_disable                 0x300072b0   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_dcache_status                  0x300072c4   ARM Code      20  cpu.o(.text)
    rt_hw_cpu_reset                          0x300072d8   ARM Code      48  cpu.o(.text)
    rt_hw_cpu_shutdown                       0x30007308   ARM Code      40  cpu.o(.text)
    rt_hw_interrupt_init                     0x30007380   ARM Code     148  interrupt.o(.text)
    rt_hw_interrupt_mask                     0x30007414   ARM Code      28  interrupt.o(.text)
    rt_hw_interrupt_umask                    0x30007430   ARM Code      88  interrupt.o(.text)
    rt_hw_interrupt_install                  0x30007488   ARM Code     132  interrupt.o(.text)
    main                                     0x30007568   ARM Code      40  main.o(.text)
    rt_hw_serial_register                    0x30007978   ARM Code     120  serial.o(.text)
    rt_hw_serial_isr                         0x300079f0   ARM Code     172  serial.o(.text)
    rt_hw_stack_init                         0x30007ab4   ARM Code     224  stack.o(.text)
    rt_hw_get_clock                          0x30007b94   ARM Code     380  system_clock.o(.text)
    rt_hw_set_mpll_clock                     0x30007d10   ARM Code      20  system_clock.o(.text)
    rt_hw_set_upll_clock                     0x30007d24   ARM Code      24  system_clock.o(.text)
    rt_hw_set_divider                        0x30007d3c   ARM Code      16  system_clock.o(.text)
    rt_hw_clock_init                         0x30007d4c   ARM Code      68  system_clock.o(.text)
    rt_hw_interrupt_disable                  0x30007da0   ARM Code      16  context.o(.text)
    rt_hw_interrupt_enable                   0x30007db0   ARM Code       8  context.o(.text)
    rt_hw_context_switch                     0x30007db8   ARM Code      52  context.o(.text)
    rt_hw_context_switch_to                  0x30007dec   ARM Code      24  context.o(.text)
    rt_hw_context_switch_interrupt           0x30007e04   ARM Code      44  context.o(.text)
    __aeabi_idiv                             0x30007e3c   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x30007e3c   ARM Code     384  aeabi_sdiv.o(.text)
    __user_setup_stackheap                   0x30007fbc   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x3000801d   Thumb Code    12  exit.o(.text)
    __user_libspace                          0x30008028   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x30008028   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x30008028   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x30008034   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x3000803d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x30008048   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x30008048   ARM Code       4  use_no_semi.o(.text)
    __aeabi_uidiv                            0x3000804c   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x3000804c   ARM Code      36  aeabi_sdiv.o(.text_udiv)
    __semihosting_library_function           0x3000804c   ARM Code       0  indicate_semi.o(.text)
    __rtmsym_rt_tick_get_name                0x30008070   Data          12  clock.o(.constdata)
    __rtmsym_rt_tick_from_millisecond_name   0x3000807c   Data          25  clock.o(.constdata)
    __rtmsym_rt_device_register_name         0x30008095   Data          19  device.o(.constdata)
    __rtmsym_rt_device_unregister_name       0x300080a8   Data          21  device.o(.constdata)
    __rtmsym_rt_device_find_name             0x300080bd   Data          15  device.o(.constdata)
    __rtmsym_rt_device_open_name             0x300080cc   Data          15  device.o(.constdata)
    __rtmsym_rt_device_close_name            0x300080db   Data          16  device.o(.constdata)
    __rtmsym_rt_device_read_name             0x300080eb   Data          15  device.o(.constdata)
    __rtmsym_rt_device_write_name            0x300080fa   Data          16  device.o(.constdata)
    __rtmsym_rt_device_control_name          0x3000810a   Data          18  device.o(.constdata)
    __rtmsym_rt_device_set_rx_indicate_name  0x3000811c   Data          26  device.o(.constdata)
    __rtmsym_rt_device_set_tx_complete_name  0x30008136   Data          26  device.o(.constdata)
    __rtmsym_rt_sem_init_name                0x30008150   Data          12  ipc.o(.constdata)
    __rtmsym_rt_sem_detach_name              0x3000815c   Data          14  ipc.o(.constdata)
    __rtmsym_rt_sem_create_name              0x3000816a   Data          14  ipc.o(.constdata)
    __rtmsym_rt_sem_delete_name              0x30008178   Data          14  ipc.o(.constdata)
    __rtmsym_rt_sem_take_name                0x30008186   Data          12  ipc.o(.constdata)
    __rtmsym_rt_sem_trytake_name             0x30008192   Data          15  ipc.o(.constdata)
    __rtmsym_rt_sem_release_name             0x300081a1   Data          15  ipc.o(.constdata)
    __rtmsym_rt_sem_control_name             0x300081b0   Data          15  ipc.o(.constdata)
    __rtmsym_rt_mutex_init_name              0x300081bf   Data          14  ipc.o(.constdata)
    __rtmsym_rt_mutex_detach_name            0x300081cd   Data          16  ipc.o(.constdata)
    __rtmsym_rt_mutex_create_name            0x300081dd   Data          16  ipc.o(.constdata)
    __rtmsym_rt_mutex_delete_name            0x300081ed   Data          16  ipc.o(.constdata)
    __rtmsym_rt_mutex_take_name              0x300081fd   Data          14  ipc.o(.constdata)
    __rtmsym_rt_mutex_release_name           0x3000820b   Data          17  ipc.o(.constdata)
    __rtmsym_rt_mutex_control_name           0x3000821c   Data          17  ipc.o(.constdata)
    __rtmsym_rt_event_init_name              0x3000822d   Data          14  ipc.o(.constdata)
    __rtmsym_rt_event_detach_name            0x3000823b   Data          16  ipc.o(.constdata)
    __rtmsym_rt_event_create_name            0x3000824b   Data          16  ipc.o(.constdata)
    __rtmsym_rt_event_delete_name            0x3000825b   Data          16  ipc.o(.constdata)
    __rtmsym_rt_event_send_name              0x3000826b   Data          14  ipc.o(.constdata)
    __rtmsym_rt_event_recv_name              0x30008279   Data          14  ipc.o(.constdata)
    __rtmsym_rt_event_control_name           0x30008287   Data          17  ipc.o(.constdata)
    __rtmsym_rt_mb_init_name                 0x30008298   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mb_detach_name               0x300082a3   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mb_create_name               0x300082b0   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mb_delete_name               0x300082bd   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mb_send_wait_name            0x300082ca   Data          16  ipc.o(.constdata)
    __rtmsym_rt_mb_send_name                 0x300082da   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mb_recv_name                 0x300082e5   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mb_control_name              0x300082f0   Data          14  ipc.o(.constdata)
    __rtmsym_rt_mq_init_name                 0x300082fe   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mq_detach_name               0x30008309   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mq_create_name               0x30008316   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mq_delete_name               0x30008323   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mq_send_name                 0x30008330   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mq_urgent_name               0x3000833b   Data          13  ipc.o(.constdata)
    __rtmsym_rt_mq_recv_name                 0x30008348   Data          11  ipc.o(.constdata)
    __rtmsym_rt_mq_control_name              0x30008353   Data          14  ipc.o(.constdata)
    __rtmsym_rt_interrupt_enter_name         0x30008361   Data          19  irq.o(.constdata)
    __rtmsym_rt_interrupt_leave_name         0x30008374   Data          19  irq.o(.constdata)
    __rtmsym_rt_interrupt_get_nest_name      0x30008387   Data          22  irq.o(.constdata)
    __rtmsym_rt_hw_interrupt_disable_name    0x3000839d   Data          24  irq.o(.constdata)
    __rtmsym_rt_hw_interrupt_enable_name     0x300083b5   Data          23  irq.o(.constdata)
    __rtmsym_rt_get_errno_name               0x300083cc   Data          13  kservice.o(.constdata)
    __rtmsym_rt_set_errno_name               0x300083d9   Data          13  kservice.o(.constdata)
    __rtmsym__rt_errno_name                  0x300083e6   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memset_name                  0x300083f0   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memcpy_name                  0x300083fa   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memmove_name                 0x30008404   Data          11  kservice.o(.constdata)
    __rtmsym_rt_memcmp_name                  0x3000840f   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strstr_name                  0x30008419   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strcasecmp_name              0x30008423   Data          14  kservice.o(.constdata)
    __rtmsym_rt_strncpy_name                 0x30008431   Data          11  kservice.o(.constdata)
    __rtmsym_rt_strncmp_name                 0x3000843c   Data          11  kservice.o(.constdata)
    __rtmsym_rt_strcmp_name                  0x30008447   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strlen_name                  0x30008451   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strdup_name                  0x3000845b   Data          10  kservice.o(.constdata)
    __rtmsym_rt_show_version_name            0x30008465   Data          16  kservice.o(.constdata)
    __rtmsym_rt_vsnprintf_name               0x30008475   Data          13  kservice.o(.constdata)
    __rtmsym_rt_snprintf_name                0x30008482   Data          12  kservice.o(.constdata)
    __rtmsym_rt_vsprintf_name                0x3000848e   Data          12  kservice.o(.constdata)
    __rtmsym_rt_sprintf_name                 0x3000849a   Data          11  kservice.o(.constdata)
    __rtmsym_rt_console_get_device_name      0x300084a5   Data          22  kservice.o(.constdata)
    __rtmsym_rt_console_set_device_name      0x300084bb   Data          22  kservice.o(.constdata)
    __rtmsym_rt_hw_console_output_name       0x300084d1   Data          21  kservice.o(.constdata)
    __rtmsym_rt_kprintf_name                 0x300084e6   Data          11  kservice.o(.constdata)
    __rtmsym_rt_malloc_align_name            0x300084f1   Data          16  kservice.o(.constdata)
    __rtmsym_rt_free_align_name              0x30008501   Data          14  kservice.o(.constdata)
    __lowest_bit_bitmap                      0x3000850f   Data         256  kservice.o(.constdata)
    __rtmsym_rt_malloc_name                  0x30008631   Data          10  mem.o(.constdata)
    __rtmsym_rt_realloc_name                 0x3000863b   Data          11  mem.o(.constdata)
    __rtmsym_rt_calloc_name                  0x30008646   Data          10  mem.o(.constdata)
    __rtmsym_rt_free_name                    0x30008650   Data           8  mem.o(.constdata)
    __rtmsym_rt_mp_init_name                 0x30008658   Data          11  mempool.o(.constdata)
    __rtmsym_rt_mp_detach_name               0x30008663   Data          13  mempool.o(.constdata)
    __rtmsym_rt_mp_create_name               0x30008670   Data          13  mempool.o(.constdata)
    __rtmsym_rt_mp_delete_name               0x3000867d   Data          13  mempool.o(.constdata)
    __rtmsym_rt_mp_alloc_name                0x3000868a   Data          12  mempool.o(.constdata)
    __rtmsym_rt_mp_free_name                 0x30008696   Data          11  mempool.o(.constdata)
    __rtmsym_rt_object_get_information_name  0x300086a1   Data          26  object.o(.constdata)
    __rtmsym_rt_thread_init_name             0x300086bb   Data          15  thread.o(.constdata)
    __rtmsym_rt_thread_self_name             0x300086ca   Data          15  thread.o(.constdata)
    __rtmsym_rt_thread_startup_name          0x300086d9   Data          18  thread.o(.constdata)
    __rtmsym_rt_thread_detach_name           0x300086eb   Data          17  thread.o(.constdata)
    __rtmsym_rt_thread_create_name           0x300086fc   Data          17  thread.o(.constdata)
    __rtmsym_rt_thread_delete_name           0x3000870d   Data          17  thread.o(.constdata)
    __rtmsym_rt_thread_yield_name            0x3000871e   Data          16  thread.o(.constdata)
    __rtmsym_rt_thread_delay_name            0x3000872e   Data          16  thread.o(.constdata)
    __rtmsym_rt_thread_control_name          0x3000873e   Data          18  thread.o(.constdata)
    __rtmsym_rt_thread_suspend_name          0x30008750   Data          18  thread.o(.constdata)
    __rtmsym_rt_thread_resume_name           0x30008762   Data          17  thread.o(.constdata)
    __rtmsym_rt_thread_timeout_name          0x30008773   Data          18  thread.o(.constdata)
    __rtmsym_rt_thread_find_name             0x30008785   Data          15  thread.o(.constdata)
    __rtmsym_rt_timer_init_name              0x30008794   Data          14  timer.o(.constdata)
    __rtmsym_rt_timer_detach_name            0x300087a2   Data          16  timer.o(.constdata)
    __rtmsym_rt_timer_create_name            0x300087b2   Data          16  timer.o(.constdata)
    __rtmsym_rt_timer_delete_name            0x300087c2   Data          16  timer.o(.constdata)
    __rtmsym_rt_timer_start_name             0x300087d2   Data          15  timer.o(.constdata)
    __rtmsym_rt_timer_stop_name              0x300087e1   Data          14  timer.o(.constdata)
    __rtmsym_rt_timer_control_name           0x300087ef   Data          17  timer.o(.constdata)
    RTMSymTab$$Base                          0x30008800   Number         0  clock.o(RTMSymTab)
    __rtmsym_rt_tick_get                     0x30008800   Data           8  clock.o(RTMSymTab)
    __rtmsym_rt_tick_from_millisecond        0x30008808   Data           8  clock.o(RTMSymTab)
    __rtmsym_rt_device_register              0x30008810   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_unregister            0x30008818   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_find                  0x30008820   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_open                  0x30008828   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_close                 0x30008830   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_read                  0x30008838   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_write                 0x30008840   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_control               0x30008848   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_set_rx_indicate       0x30008850   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_device_set_tx_complete       0x30008858   Data           8  device.o(RTMSymTab)
    __rtmsym_rt_sem_init                     0x30008860   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_detach                   0x30008868   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_create                   0x30008870   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_delete                   0x30008878   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_take                     0x30008880   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_trytake                  0x30008888   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_release                  0x30008890   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_sem_control                  0x30008898   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_init                   0x300088a0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_detach                 0x300088a8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_create                 0x300088b0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_delete                 0x300088b8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_take                   0x300088c0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_release                0x300088c8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mutex_control                0x300088d0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_init                   0x300088d8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_detach                 0x300088e0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_create                 0x300088e8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_delete                 0x300088f0   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_send                   0x300088f8   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_recv                   0x30008900   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_event_control                0x30008908   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_init                      0x30008910   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_detach                    0x30008918   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_create                    0x30008920   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_delete                    0x30008928   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_send_wait                 0x30008930   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_send                      0x30008938   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_recv                      0x30008940   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mb_control                   0x30008948   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_init                      0x30008950   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_detach                    0x30008958   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_create                    0x30008960   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_delete                    0x30008968   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_send                      0x30008970   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_urgent                    0x30008978   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_recv                      0x30008980   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_mq_control                   0x30008988   Data           8  ipc.o(RTMSymTab)
    __rtmsym_rt_interrupt_enter              0x30008990   Data           8  irq.o(RTMSymTab)
    __rtmsym_rt_interrupt_leave              0x30008998   Data           8  irq.o(RTMSymTab)
    __rtmsym_rt_interrupt_get_nest           0x300089a0   Data           8  irq.o(RTMSymTab)
    __rtmsym_rt_hw_interrupt_disable         0x300089a8   Data           8  irq.o(RTMSymTab)
    __rtmsym_rt_hw_interrupt_enable          0x300089b0   Data           8  irq.o(RTMSymTab)
    __rtmsym_rt_get_errno                    0x300089b8   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_set_errno                    0x300089c0   Data           8  kservice.o(RTMSymTab)
    __rtmsym__rt_errno                       0x300089c8   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_memset                       0x300089d0   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_memcpy                       0x300089d8   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_memmove                      0x300089e0   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_memcmp                       0x300089e8   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strstr                       0x300089f0   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strcasecmp                   0x300089f8   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strncpy                      0x30008a00   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strncmp                      0x30008a08   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strcmp                       0x30008a10   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strlen                       0x30008a18   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_strdup                       0x30008a20   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_show_version                 0x30008a28   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_vsnprintf                    0x30008a30   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_snprintf                     0x30008a38   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_vsprintf                     0x30008a40   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_sprintf                      0x30008a48   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_console_get_device           0x30008a50   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_console_set_device           0x30008a58   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_hw_console_output            0x30008a60   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_kprintf                      0x30008a68   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_malloc_align                 0x30008a70   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_free_align                   0x30008a78   Data           8  kservice.o(RTMSymTab)
    __rtmsym_rt_malloc                       0x30008a80   Data           8  mem.o(RTMSymTab)
    __rtmsym_rt_realloc                      0x30008a88   Data           8  mem.o(RTMSymTab)
    __rtmsym_rt_calloc                       0x30008a90   Data           8  mem.o(RTMSymTab)
    __rtmsym_rt_free                         0x30008a98   Data           8  mem.o(RTMSymTab)
    __rtmsym_rt_mp_init                      0x30008aa0   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_mp_detach                    0x30008aa8   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_mp_create                    0x30008ab0   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_mp_delete                    0x30008ab8   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_mp_alloc                     0x30008ac0   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_mp_free                      0x30008ac8   Data           8  mempool.o(RTMSymTab)
    __rtmsym_rt_object_get_information       0x30008ad0   Data           8  object.o(RTMSymTab)
    __rtmsym_rt_thread_init                  0x30008ad8   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_self                  0x30008ae0   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_startup               0x30008ae8   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_detach                0x30008af0   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_create                0x30008af8   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_delete                0x30008b00   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_yield                 0x30008b08   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_delay                 0x30008b10   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_control               0x30008b18   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_suspend               0x30008b20   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_resume                0x30008b28   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_timeout               0x30008b30   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_thread_find                  0x30008b38   Data           8  thread.o(RTMSymTab)
    __rtmsym_rt_timer_init                   0x30008b40   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_detach                 0x30008b48   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_create                 0x30008b50   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_delete                 0x30008b58   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_start                  0x30008b60   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_stop                   0x30008b68   Data           8  timer.o(RTMSymTab)
    __rtmsym_rt_timer_control                0x30008b70   Data           8  timer.o(RTMSymTab)
    RTMSymTab$$Limit                         0x30008b78   Number         0  timer.o(RTMSymTab)
    Region$$Table$$Base                      0x30008b78   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x30008ba8   Number         0  anon$$obj.o(Region$$Table)
    rt_interrupt_nest                        0x30008bac   Data           1  irq.o(.data)
    rt_object_container                      0x30008bf4   Data         160  object.o(.data)
    rt_object_trytake_hook                   0x30008c9c   Data           4  object.o(.data)
    rt_object_take_hook                      0x30008ca0   Data           4  object.o(.data)
    rt_object_put_hook                       0x30008ca4   Data           4  object.o(.data)
    rt_current_thread                        0x30008cac   Data           4  scheduler.o(.data)
    rt_current_priority                      0x30008cb0   Data           1  scheduler.o(.data)
    rt_thread_ready_priority_group           0x30008cb4   Data           4  scheduler.o(.data)
    rt_thread_defunct                        0x30008cb8   Data           8  scheduler.o(.data)
    uart0                                    0x30008cd4   Data          12  board.o(.data)
    uart2                                    0x30008ce0   Data          12  board.o(.data)
    rt_interrupt_from_thread                 0x30008cec   Data           4  interrupt.o(.data)
    rt_interrupt_to_thread                   0x30008cf0   Data           4  interrupt.o(.data)
    rt_thread_switch_interrupt_flag          0x30008cf4   Data           4  interrupt.o(.data)
    PCLK                                     0x30008cf8   Data           4  system_clock.o(.data)
    FCLK                                     0x30008cfc   Data           4  system_clock.o(.data)
    HCLK                                     0x30008d00   Data           4  system_clock.o(.data)
    UCLK                                     0x30008d04   Data           4  system_clock.o(.data)
    rt_thread_priority_table                 0x30008dc4   Data        2048  scheduler.o(.bss)
    rt_thread_ready_table                    0x300095c4   Data          32  scheduler.o(.bss)
    uart0_int_rx                             0x300095e4   Data          72  board.o(.bss)
    uart0_device                             0x3000962c   Data          92  board.o(.bss)
    uart2_int_rx                             0x30009688   Data          72  board.o(.bss)
    uart2_device                             0x300096d0   Data          92  board.o(.bss)
    isr_table                                0x3000972c   Data        1408  interrupt.o(.bss)
    __libspace_start                         0x30009cac   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x30009d0c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x300000ac

  Load Region LR_IROM1 (Base: 0x30000000, Size: 0x00008d08, Max: 0x01000000, ABSOLUTE, COMPRESSED[0x00008c14])

    Execution Region ER_IROM1 (Base: 0x30000000, Size: 0x00008ba8, Max: 0x00200000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000000   0x000000ac   Code   RO            4    RESET               start.o
    0x300000ac   0x00000008   Code   RO          453  * !!!main             c_t.l(__main.o)
    0x300000b4   0x0000003c   Code   RO          621    !!!scatter          c_t.l(__scatter.o)
    0x300000f0   0x0000005c   Code   RO          619    !!dczerorl2         c_t.l(__dczerorl2.o)
    0x3000014c   0x00000028   Code   RO          623    !!handler_copy      c_t.l(__scatter_copy.o)
    0x30000174   0x0000002c   Code   RO          625    !!handler_zi        c_t.l(__scatter_zi.o)
    0x300001a0   0x00000008   Ven    RO          490    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x300001a8   0x00000002   Code   RO          490    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x300001aa   0x00000000   Code   RO          503    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          506    .ARM.Collect$$libinit$$00000008  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          508    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          510    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          513    .ARM.Collect$$libinit$$0000000F  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          515    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          517    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          519    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          521    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          523    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          525    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          527    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          529    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          531    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          533    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          537    .ARM.Collect$$libinit$$0000002A  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          539    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          541    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x300001aa   0x00000000   Code   RO          543    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x300001aa   0x0000000c   Code   RO          544    .ARM.Collect$$libinit$$00000031  c_t.l(libinit2.o)
    0x300001b6   0x00000002   PAD
    0x300001b8   0x00000008   Ven    RO          577    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x300001c0   0x00000004   Code   RO          577    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x300001c4   0x00000000   Code   RO          604    .ARM.Collect$$libshutdown$$00000003  c_t.l(libshutdown2.o)
    0x300001c4   0x00000000   Code   RO          607    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x300001c4   0x00000000   Code   RO          610    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x300001c4   0x00000000   Code   RO          612    .ARM.Collect$$libshutdown$$0000000B  c_t.l(libshutdown2.o)
    0x300001c4   0x00000000   Code   RO          615    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x300001c4   0x00000006   Code   RO          616    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x300001ca   0x00000002   PAD
    0x300001cc   0x00000000   Code   RO          455    .ARM.Collect$$rtentry$$00000000  c_t.l(rtentry.o)
    0x300001cc   0x00000000   Code   RO          461    .ARM.Collect$$rtentry$$00000002  c_t.l(rtentry2.o)
    0x300001cc   0x00000008   Code   RO          473    .ARM.Collect$$rtentry$$00000004  c_t.l(rtentry4.o)
    0x300001d4   0x00000000   Code   RO          463    .ARM.Collect$$rtentry$$00000009  c_t.l(rtentry2.o)
    0x300001d4   0x00000004   Code   RO          464    .ARM.Collect$$rtentry$$0000000A  c_t.l(rtentry2.o)
    0x300001d8   0x00000000   Code   RO          466    .ARM.Collect$$rtentry$$0000000C  c_t.l(rtentry2.o)
    0x300001d8   0x00000028   Code   RO          467    .ARM.Collect$$rtentry$$0000000D  c_t.l(rtentry2.o)
    0x30000200   0x00000004   Ven    RO          494    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x30000204   0x00000004   Code   RO          494    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x30000208   0x00000000   Code   RO          548    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x30000208   0x00000004   Code   RO          549    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x3000020c   0x00000008   Code   RO          550    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x30000214   0x00000020   Code   RO            5    .text               start.o
    0x30000234   0x000000b4   Code   RO           13    .text               clock.o
    0x300002e8   0x00000454   Code   RO           55    .text               device.o
    0x3000073c   0x00001868   Code   RO           91    .text               ipc.o
    0x30001fa4   0x00000070   Code   RO          111    .text               irq.o
    0x30002014   0x00001118   Code   RO          128    .text               kservice.o
    0x3000312c   0x000007f8   Code   RO          146    .text               mem.o
    0x30003924   0x000004f0   Code   RO          170    .text               mempool.o
    0x30003e14   0x00001b00   Code   RO          190    .text               module.o
    0x30005914   0x00000488   Code   RO          211    .text               object.o
    0x30005d9c   0x000004a4   Code   RO          231    .text               scheduler.o
    0x30006240   0x000006cc   Code   RO          257    .text               thread.o
    0x3000690c   0x00000618   Code   RO          277    .text               timer.o
    0x30006f24   0x0000033c   Code   RO          298    .text               board.o
    0x30007260   0x00000100   Code   RO          333    .text               cpu.o
    0x30007360   0x00000208   Code   RO          348    .text               interrupt.o
    0x30007568   0x00000028   Code   RO          365    .text               main.o
    0x30007590   0x00000524   Code   RO          386    .text               serial.o
    0x30007ab4   0x000000e0   Code   RO          404    .text               stack.o
    0x30007b94   0x0000020c   Code   RO          416    .text               system_clock.o
    0x30007da0   0x0000009c   Code   RO          431    .text               context.o
    0x30007e3c   0x00000180   Code   RO          437    .text               c_t.l(aeabi_sdiv.o)
    0x30007fbc   0x00000060   Code   RO          477    .text               c_t.l(sys_stackheap_outer.o)
    0x3000801c   0x0000000c   Code   RO          479    .text               c_t.l(exit.o)
    0x30008028   0x0000000c   Code   RO          491    .text               c_t.l(libspace.o)
    0x30008034   0x00000008   Ven    RO          545    .text               c_t.l(sys_exit.o)
    0x3000803c   0x0000000c   Code   RO          545    .text               c_t.l(sys_exit.o)
    0x30008048   0x00000004   Code   RO          566    .text               c_t.l(use_no_semi.o)
    0x3000804c   0x00000000   Code   RO          568    .text               c_t.l(indicate_semi.o)
    0x3000804c   0x00000024   Code   RO          438    .text_udiv          c_t.l(aeabi_sdiv.o)
    0x30008070   0x00000025   Data   RO           14    .constdata          clock.o
    0x30008095   0x000000bb   Data   RO           56    .constdata          device.o
    0x30008150   0x00000211   Data   RO           92    .constdata          ipc.o
    0x30008361   0x0000006b   Data   RO          112    .constdata          irq.o
    0x300083cc   0x00000265   Data   RO          130    .constdata          kservice.o
    0x30008631   0x00000027   Data   RO          148    .constdata          mem.o
    0x30008658   0x00000049   Data   RO          171    .constdata          mempool.o
    0x300086a1   0x0000001a   Data   RO          212    .constdata          object.o
    0x300086bb   0x000000d9   Data   RO          258    .constdata          thread.o
    0x30008794   0x0000006c   Data   RO          278    .constdata          timer.o
    0x30008800   0x00000010   Data   RO           16    RTMSymTab           clock.o
    0x30008810   0x00000050   Data   RO           57    RTMSymTab           device.o
    0x30008860   0x00000130   Data   RO           93    RTMSymTab           ipc.o
    0x30008990   0x00000028   Data   RO          114    RTMSymTab           irq.o
    0x300089b8   0x000000c8   Data   RO          132    RTMSymTab           kservice.o
    0x30008a80   0x00000020   Data   RO          150    RTMSymTab           mem.o
    0x30008aa0   0x00000030   Data   RO          173    RTMSymTab           mempool.o
    0x30008ad0   0x00000008   Data   RO          214    RTMSymTab           object.o
    0x30008ad8   0x00000068   Data   RO          259    RTMSymTab           thread.o
    0x30008b40   0x00000038   Data   RO          280    RTMSymTab           timer.o
    0x30008b78   0x00000030   Data   RO          617    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x30008ba8, Size: 0x00000160, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x0000006c])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30008ba8   0x00000004   Data   RW           15    .data               clock.o
    0x30008bac   0x00000001   Data   RW          113    .data               irq.o
    0x30008bad   0x00000003   PAD
    0x30008bb0   0x00000008   Data   RW          131    .data               kservice.o
    0x30008bb8   0x00000020   Data   RW          149    .data               mem.o
    0x30008bd8   0x00000008   Data   RW          172    .data               mempool.o
    0x30008be0   0x00000014   Data   RW          191    .data               module.o
    0x30008bf4   0x000000b4   Data   RW          213    .data               object.o
    0x30008ca8   0x0000001c   Data   RW          233    .data               scheduler.o
    0x30008cc4   0x00000010   Data   RW          279    .data               timer.o
    0x30008cd4   0x00000018   Data   RW          300    .data               board.o
    0x30008cec   0x0000000c   Data   RW          350    .data               interrupt.o
    0x30008cf8   0x00000010   Data   RW          417    .data               system_clock.o


    Execution Region ER_ZI (Base: 0x30008d08, Size: 0x00001490, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30008d08   0x00000080   Zero   RW          129    .bss                kservice.o
    0x30008d88   0x0000003c   Zero   RW          147    .bss                mem.o
    0x30008dc4   0x00000820   Zero   RW          232    .bss                scheduler.o
    0x300095e4   0x00000148   Zero   RW          299    .bss                board.o
    0x3000972c   0x00000580   Zero   RW          349    .bss                interrupt.o
    0x30009cac   0x00000060   Zero   RW          492    .bss                c_t.l(libspace.o)
    0x30009d0c   0x00000004   PAD
    0x30009d10   0x00000000   Zero   RW            3    HEAP                start.o
    0x30009d10   0x00000488   Zero   RW            2    STACK               start.o


    Execution Region ER_MMU (Base: 0x33ff0000, Size: 0x00100000, Max: 0x00100000, ABSOLUTE, UNINIT)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x33ff0000   0x00100000   Zero   RW            1    ER_MMU.bss          anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       828         64          0         24        328      11585   board.o
       180          4         53          4          0      13866   clock.o
       156         12          0          0          0        528   context.o
       256         16          0          0          0       2355   cpu.o
      1108         60        267          0          0       6407   device.o
       520         92          0         12       1408       2326   interrupt.o
      6248         12        833          0          0      22845   ipc.o
       112          4        147          1          0       2247   irq.o
      4376        168        813          8        128      15065   kservice.o
        40          0          0          0          0        403   main.o
      2040        108         71         32         60       5006   mem.o
      1264          8        121          8          0       5656   mempool.o
      6912        376          0         20          0      14977   module.o
      1160         28         34        180          0       5887   object.o
      1188        120          0         28       2080       4871   scheduler.o
      1316         24          0          0          0       4349   serial.o
       224          0          0          0          0        659   stack.o
       204         52          0          0       1160        616   start.o
       524         16          0         16          0       1665   system_clock.o
      1740         20        321          0          0       9461   thread.o
      1560         20        164         16          0       7654   timer.o

    ----------------------------------------------------------------------
     31956       1204       2872        352    1053740     138428   Object Totals
         0          0         48          0    1048576          0   (incl. Generated)
         0          0          0          3          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        92          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
       420          0          0          0          0        148   aeabi_sdiv.o
        12          0          0          0          0         64   exit.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   rtentry.o
        44          4          0          0          0          0   rtentry2.o
         8          0          0          0          0          0   rtentry4.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       924         20          0          0        100        556   Library Totals
         4          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       920         20          0          0         96        556   c_t.l

    ----------------------------------------------------------------------
       924         20          0          0        100        556   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     32880       1224       2872        352    1053840     136860   Grand Totals
     32880       1224       2872        108    1053840     136860   ELF Image Totals (compressed)
     32880       1224       2872        108          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                35752 (  34.91kB)
    Total RW  Size (RW Data + ZI Data)           1054192 (1029.48kB)
    Total ROM Size (Code + RO Data + RW Data)      35860 (  35.02kB)

==============================================================================

