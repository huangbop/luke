Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    start.o(RESET) refers to start.o(STACK) for Stack_Top
    start.o(RESET) refers to __main.o(!!!main) for __main
    start.o(.text) refers to start.o(HEAP) for Heap_Mem
    start.o(.text) refers to start.o(STACK) for Stack_Mem
    clock.o(i.rt_tick_from_millisecond) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    clock.o(i.rt_tick_get) refers to clock.o(.data) for rt_tick
    clock.o(i.rt_tick_increase) refers to thread.o(i.rt_thread_self) for rt_thread_self
    clock.o(i.rt_tick_increase) refers to thread.o(i.rt_thread_yield) for rt_thread_yield
    clock.o(i.rt_tick_increase) refers to timer.o(i.rt_timer_check) for rt_timer_check
    clock.o(i.rt_tick_increase) refers to clock.o(.data) for rt_tick
    clock.o(i.rt_tick_set) refers to context.o(.text) for rt_hw_interrupt_disable
    clock.o(i.rt_tick_set) refers to clock.o(.data) for rt_tick
    clock.o(RTMSymTab) refers to clock.o(i.rt_tick_get) for rt_tick_get
    clock.o(RTMSymTab) refers to clock.o(.constdata) for __rtmsym_rt_tick_get_name
    clock.o(RTMSymTab) refers to clock.o(i.rt_tick_from_millisecond) for rt_tick_from_millisecond
    device.o(i.rt_device_find) refers to thread.o(i.rt_thread_self) for rt_thread_self
    device.o(i.rt_device_find) refers to scheduler.o(i.rt_enter_critical) for rt_enter_critical
    device.o(i.rt_device_find) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    device.o(i.rt_device_find) refers to scheduler.o(i.rt_exit_critical) for rt_exit_critical
    device.o(i.rt_device_find) refers to object.o(.data) for rt_object_container
    device.o(i.rt_device_init) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    device.o(i.rt_device_open) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    device.o(i.rt_device_read) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    device.o(i.rt_device_register) refers to device.o(i.rt_device_find) for rt_device_find
    device.o(i.rt_device_register) refers to object.o(i.rt_object_init) for rt_object_init
    device.o(i.rt_device_unregister) refers to object.o(i.rt_object_detach) for rt_object_detach
    device.o(i.rt_device_write) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    device.o(RTMSymTab) refers to device.o(i.rt_device_register) for rt_device_register
    device.o(RTMSymTab) refers to device.o(.constdata) for __rtmsym_rt_device_register_name
    device.o(RTMSymTab) refers to device.o(i.rt_device_unregister) for rt_device_unregister
    device.o(RTMSymTab) refers to device.o(i.rt_device_find) for rt_device_find
    device.o(RTMSymTab) refers to device.o(i.rt_device_open) for rt_device_open
    device.o(RTMSymTab) refers to device.o(i.rt_device_close) for rt_device_close
    device.o(RTMSymTab) refers to device.o(i.rt_device_read) for rt_device_read
    device.o(RTMSymTab) refers to device.o(i.rt_device_write) for rt_device_write
    device.o(RTMSymTab) refers to device.o(i.rt_device_control) for rt_device_control
    device.o(RTMSymTab) refers to device.o(i.rt_device_set_rx_indicate) for rt_device_set_rx_indicate
    device.o(RTMSymTab) refers to device.o(i.rt_device_set_tx_complete) for rt_device_set_tx_complete
    idle.o(i._has_defunct_thread) refers to scheduler.o(.data) for rt_thread_defunct
    idle.o(i.rt_thread_idle_entry) refers to idle.o(i.rt_thread_idle_excute) for rt_thread_idle_excute
    idle.o(i.rt_thread_idle_entry) refers to idle.o(.data) for rt_thread_idle_hook
    idle.o(i.rt_thread_idle_excute) refers to context.o(.text) for rt_hw_interrupt_disable
    idle.o(i.rt_thread_idle_excute) refers to idle.o(i._has_defunct_thread) for _has_defunct_thread
    idle.o(i.rt_thread_idle_excute) refers to object.o(i.rt_object_is_systemobject) for rt_object_is_systemobject
    idle.o(i.rt_thread_idle_excute) refers to mem.o(i.rt_free) for rt_free
    idle.o(i.rt_thread_idle_excute) refers to object.o(i.rt_object_delete) for rt_object_delete
    idle.o(i.rt_thread_idle_excute) refers to module.o(i.rt_module_destroy) for rt_module_destroy
    idle.o(i.rt_thread_idle_excute) refers to scheduler.o(.data) for rt_thread_defunct
    idle.o(i.rt_thread_idle_init) refers to thread.o(i.rt_thread_init) for rt_thread_init
    idle.o(i.rt_thread_idle_init) refers to thread.o(i.rt_thread_startup) for rt_thread_startup
    idle.o(i.rt_thread_idle_init) refers to idle.o(.bss) for rt_thread_stack
    idle.o(i.rt_thread_idle_init) refers to idle.o(i.rt_thread_idle_entry) for rt_thread_idle_entry
    idle.o(i.rt_thread_idle_sethook) refers to idle.o(.data) for rt_thread_idle_hook
    ipc.o(i.rt_event_control) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_event_control) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_event_control) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_event_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    ipc.o(i.rt_event_create) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_event_delete) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_event_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_event_detach) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_event_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    ipc.o(i.rt_event_init) refers to object.o(i.rt_object_init) for rt_object_init
    ipc.o(i.rt_event_init) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_event_recv) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_event_recv) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_event_recv) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_event_recv) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_event_recv) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_event_recv) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_event_recv) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(i.rt_event_send) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_event_send) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_event_send) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    ipc.o(i.rt_event_send) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_event_send) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_ipc_list_resume) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    ipc.o(i.rt_ipc_list_resume_all) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_ipc_list_resume_all) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    ipc.o(i.rt_ipc_list_resume_all) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_ipc_list_suspend) refers to thread.o(i.rt_thread_suspend) for rt_thread_suspend
    ipc.o(i.rt_ipc_list_suspend) refers to ipc.o(i.rt_list_insert_before) for rt_list_insert_before
    ipc.o(i.rt_ipc_object_init) refers to ipc.o(i.rt_list_init) for rt_list_init
    ipc.o(i.rt_mb_control) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mb_control) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mb_control) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mb_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    ipc.o(i.rt_mb_create) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mb_create) refers to mem.o(i.rt_malloc) for rt_malloc
    ipc.o(i.rt_mb_create) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_mb_create) refers to ipc.o(i.rt_list_init) for rt_list_init
    ipc.o(i.rt_mb_delete) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mb_delete) refers to mem.o(i.rt_free) for rt_free
    ipc.o(i.rt_mb_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_mb_detach) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mb_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    ipc.o(i.rt_mb_init) refers to object.o(i.rt_object_init) for rt_object_init
    ipc.o(i.rt_mb_init) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mb_init) refers to ipc.o(i.rt_list_init) for rt_list_init
    ipc.o(i.rt_mb_recv) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_mb_recv) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mb_recv) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_mb_recv) refers to clock.o(i.rt_tick_get) for rt_tick_get
    ipc.o(i.rt_mb_recv) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_mb_recv) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_mb_recv) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mb_recv) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_mb_recv) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_mb_recv) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(i.rt_mb_send) refers to ipc.o(i.rt_mb_send_wait) for rt_mb_send_wait
    ipc.o(i.rt_mb_send_wait) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_mb_send_wait) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mb_send_wait) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_mb_send_wait) refers to clock.o(i.rt_tick_get) for rt_tick_get
    ipc.o(i.rt_mb_send_wait) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_mb_send_wait) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_mb_send_wait) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mb_send_wait) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_mb_send_wait) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_mb_send_wait) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_mq_control) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mq_control) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mq_control) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mq_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    ipc.o(i.rt_mq_create) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mq_create) refers to mem.o(i.rt_malloc) for rt_malloc
    ipc.o(i.rt_mq_create) refers to ipc.o(i.rt_mq_delete) for rt_mq_delete
    ipc.o(i.rt_mq_delete) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mq_delete) refers to mem.o(i.rt_free) for rt_free
    ipc.o(i.rt_mq_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_mq_detach) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mq_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    ipc.o(i.rt_mq_init) refers to object.o(i.rt_object_init) for rt_object_init
    ipc.o(i.rt_mq_init) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mq_init) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    ipc.o(i.rt_mq_recv) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_mq_recv) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mq_recv) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_mq_recv) refers to clock.o(i.rt_tick_get) for rt_tick_get
    ipc.o(i.rt_mq_recv) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_mq_recv) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_mq_recv) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mq_recv) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    ipc.o(i.rt_mq_recv) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(i.rt_mq_send) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mq_send) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    ipc.o(i.rt_mq_send) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_mq_send) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_mq_send) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mq_send) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_mq_urgent) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mq_urgent) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    ipc.o(i.rt_mq_urgent) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_mq_urgent) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_mq_urgent) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mq_urgent) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_mutex_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    ipc.o(i.rt_mutex_create) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mutex_delete) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mutex_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_mutex_detach) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_mutex_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    ipc.o(i.rt_mutex_init) refers to object.o(i.rt_object_init) for rt_object_init
    ipc.o(i.rt_mutex_init) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_mutex_release) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_mutex_release) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mutex_release) refers to thread.o(i.rt_thread_control) for rt_thread_control
    ipc.o(i.rt_mutex_release) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_mutex_release) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_mutex_release) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mutex_release) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_mutex_take) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_mutex_take) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_mutex_take) refers to thread.o(i.rt_thread_control) for rt_thread_control
    ipc.o(i.rt_mutex_take) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_mutex_take) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_mutex_take) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_mutex_take) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_mutex_take) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(i.rt_sem_control) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_sem_control) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_sem_control) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_sem_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    ipc.o(i.rt_sem_create) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_sem_delete) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_sem_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    ipc.o(i.rt_sem_detach) refers to ipc.o(i.rt_ipc_list_resume_all) for rt_ipc_list_resume_all
    ipc.o(i.rt_sem_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    ipc.o(i.rt_sem_init) refers to object.o(i.rt_object_init) for rt_object_init
    ipc.o(i.rt_sem_init) refers to ipc.o(i.rt_ipc_object_init) for rt_ipc_object_init
    ipc.o(i.rt_sem_release) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_sem_release) refers to ipc.o(i.rt_list_isempty) for rt_list_isempty
    ipc.o(i.rt_sem_release) refers to ipc.o(i.rt_ipc_list_resume) for rt_ipc_list_resume
    ipc.o(i.rt_sem_release) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_sem_release) refers to object.o(.data) for rt_object_put_hook
    ipc.o(i.rt_sem_take) refers to context.o(.text) for rt_hw_interrupt_disable
    ipc.o(i.rt_sem_take) refers to thread.o(i.rt_thread_self) for rt_thread_self
    ipc.o(i.rt_sem_take) refers to ipc.o(i.rt_ipc_list_suspend) for rt_ipc_list_suspend
    ipc.o(i.rt_sem_take) refers to timer.o(i.rt_timer_control) for rt_timer_control
    ipc.o(i.rt_sem_take) refers to timer.o(i.rt_timer_start) for rt_timer_start
    ipc.o(i.rt_sem_take) refers to scheduler.o(i.rt_schedule) for rt_schedule
    ipc.o(i.rt_sem_take) refers to object.o(.data) for rt_object_trytake_hook
    ipc.o(i.rt_sem_trytake) refers to ipc.o(i.rt_sem_take) for rt_sem_take
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_init) for rt_sem_init
    ipc.o(RTMSymTab) refers to ipc.o(.constdata) for __rtmsym_rt_sem_init_name
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_detach) for rt_sem_detach
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_create) for rt_sem_create
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_delete) for rt_sem_delete
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_take) for rt_sem_take
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_trytake) for rt_sem_trytake
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_release) for rt_sem_release
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_sem_control) for rt_sem_control
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_init) for rt_mutex_init
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_detach) for rt_mutex_detach
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_create) for rt_mutex_create
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_delete) for rt_mutex_delete
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_take) for rt_mutex_take
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_release) for rt_mutex_release
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mutex_control) for rt_mutex_control
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_init) for rt_event_init
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_detach) for rt_event_detach
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_create) for rt_event_create
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_delete) for rt_event_delete
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_send) for rt_event_send
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_recv) for rt_event_recv
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_event_control) for rt_event_control
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_init) for rt_mb_init
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_detach) for rt_mb_detach
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_create) for rt_mb_create
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_delete) for rt_mb_delete
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_send_wait) for rt_mb_send_wait
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_send) for rt_mb_send
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_recv) for rt_mb_recv
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mb_control) for rt_mb_control
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_init) for rt_mq_init
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_detach) for rt_mq_detach
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_create) for rt_mq_create
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_delete) for rt_mq_delete
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_send) for rt_mq_send
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_urgent) for rt_mq_urgent
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_recv) for rt_mq_recv
    ipc.o(RTMSymTab) refers to ipc.o(i.rt_mq_control) for rt_mq_control
    irq.o(i.rt_interrupt_enter) refers to context.o(.text) for rt_hw_interrupt_disable
    irq.o(i.rt_interrupt_enter) refers to irq.o(.data) for rt_interrupt_nest
    irq.o(i.rt_interrupt_get_nest) refers to irq.o(.data) for rt_interrupt_nest
    irq.o(i.rt_interrupt_leave) refers to context.o(.text) for rt_hw_interrupt_disable
    irq.o(i.rt_interrupt_leave) refers to irq.o(.data) for rt_interrupt_nest
    irq.o(RTMSymTab) refers to irq.o(i.rt_interrupt_enter) for rt_interrupt_enter
    irq.o(RTMSymTab) refers to irq.o(.constdata) for __rtmsym_rt_interrupt_enter_name
    irq.o(RTMSymTab) refers to irq.o(i.rt_interrupt_leave) for rt_interrupt_leave
    irq.o(RTMSymTab) refers to irq.o(i.rt_interrupt_get_nest) for rt_interrupt_get_nest
    irq.o(RTMSymTab) refers to context.o(.text) for rt_hw_interrupt_disable
    kservice.o(i.__rt_ffs) refers to kservice.o(.constdata) for __lowest_bit_bitmap
    kservice.o(i._rt_errno) refers to irq.o(i.rt_interrupt_get_nest) for rt_interrupt_get_nest
    kservice.o(i._rt_errno) refers to thread.o(i.rt_thread_self) for rt_thread_self
    kservice.o(i._rt_errno) refers to kservice.o(.data) for _errno
    kservice.o(i.print_number) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    kservice.o(i.print_number) refers to kservice.o(.constdata) for large_digits
    kservice.o(i.rt_console_get_device) refers to kservice.o(.data) for _console_device
    kservice.o(i.rt_console_set_device) refers to device.o(i.rt_device_find) for rt_device_find
    kservice.o(i.rt_console_set_device) refers to device.o(i.rt_device_close) for rt_device_close
    kservice.o(i.rt_console_set_device) refers to device.o(i.rt_device_open) for rt_device_open
    kservice.o(i.rt_console_set_device) refers to kservice.o(.data) for _console_device
    kservice.o(i.rt_free_align) refers to mem.o(i.rt_free) for rt_free
    kservice.o(i.rt_get_errno) refers to irq.o(i.rt_interrupt_get_nest) for rt_interrupt_get_nest
    kservice.o(i.rt_get_errno) refers to thread.o(i.rt_thread_self) for rt_thread_self
    kservice.o(i.rt_get_errno) refers to kservice.o(.data) for _errno
    kservice.o(i.rt_kprintf) refers to kservice.o(i.rt_vsnprintf) for rt_vsnprintf
    kservice.o(i.rt_kprintf) refers to kservice.o(i.rt_hw_console_output) for rt_hw_console_output
    kservice.o(i.rt_kprintf) refers to device.o(i.rt_device_write) for rt_device_write
    kservice.o(i.rt_kprintf) refers to kservice.o(.bss) for rt_log_buf
    kservice.o(i.rt_kprintf) refers to kservice.o(.data) for _console_device
    kservice.o(i.rt_malloc_align) refers to mem.o(i.rt_malloc) for rt_malloc
    kservice.o(i.rt_set_errno) refers to irq.o(i.rt_interrupt_get_nest) for rt_interrupt_get_nest
    kservice.o(i.rt_set_errno) refers to thread.o(i.rt_thread_self) for rt_thread_self
    kservice.o(i.rt_set_errno) refers to kservice.o(.data) for _errno
    kservice.o(i.rt_show_version) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    kservice.o(i.rt_snprintf) refers to kservice.o(i.rt_vsnprintf) for rt_vsnprintf
    kservice.o(i.rt_sprintf) refers to kservice.o(i.rt_vsprintf) for rt_vsprintf
    kservice.o(i.rt_strdup) refers to kservice.o(i.rt_strlen) for rt_strlen
    kservice.o(i.rt_strdup) refers to mem.o(i.rt_malloc) for rt_malloc
    kservice.o(i.rt_strdup) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    kservice.o(i.rt_strstr) refers to kservice.o(i.rt_strlen) for rt_strlen
    kservice.o(i.rt_strstr) refers to kservice.o(i.rt_memcmp) for rt_memcmp
    kservice.o(i.rt_vsnprintf) refers to kservice.o(i.skip_atoi) for skip_atoi
    kservice.o(i.rt_vsnprintf) refers to kservice.o(i.rt_strlen) for rt_strlen
    kservice.o(i.rt_vsnprintf) refers to kservice.o(i.print_number) for print_number
    kservice.o(i.rt_vsprintf) refers to kservice.o(i.rt_vsnprintf) for rt_vsnprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_get_errno) for rt_get_errno
    kservice.o(RTMSymTab) refers to kservice.o(.constdata) for __rtmsym_rt_get_errno_name
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    kservice.o(RTMSymTab) refers to kservice.o(i._rt_errno) for _rt_errno
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_memset) for rt_memset
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_memmove) for rt_memmove
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_memcmp) for rt_memcmp
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strstr) for rt_strstr
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strcasecmp) for rt_strcasecmp
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strncpy) for rt_strncpy
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strcmp) for rt_strcmp
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strlen) for rt_strlen
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_strdup) for rt_strdup
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_show_version) for rt_show_version
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_vsnprintf) for rt_vsnprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_snprintf) for rt_snprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_vsprintf) for rt_vsprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_sprintf) for rt_sprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_console_get_device) for rt_console_get_device
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_console_set_device) for rt_console_set_device
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_hw_console_output) for rt_hw_console_output
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_malloc_align) for rt_malloc_align
    kservice.o(RTMSymTab) refers to kservice.o(i.rt_free_align) for rt_free_align
    mem.o(i.plug_holes) refers to mem.o(.data) for heap_ptr
    mem.o(i.rt_calloc) refers to mem.o(i.rt_malloc) for rt_malloc
    mem.o(i.rt_calloc) refers to kservice.o(i.rt_memset) for rt_memset
    mem.o(i.rt_free) refers to ipc.o(i.rt_sem_take) for rt_sem_take
    mem.o(i.rt_free) refers to mem.o(i.plug_holes) for plug_holes
    mem.o(i.rt_free) refers to ipc.o(i.rt_sem_release) for rt_sem_release
    mem.o(i.rt_free) refers to mem.o(.data) for rt_free_hook
    mem.o(i.rt_free) refers to mem.o(.bss) for heap_sem
    mem.o(i.rt_free_sethook) refers to mem.o(.data) for rt_free_hook
    mem.o(i.rt_malloc) refers to ipc.o(i.rt_sem_take) for rt_sem_take
    mem.o(i.rt_malloc) refers to ipc.o(i.rt_sem_release) for rt_sem_release
    mem.o(i.rt_malloc) refers to mem.o(.data) for mem_size_aligned
    mem.o(i.rt_malloc) refers to mem.o(.bss) for heap_sem
    mem.o(i.rt_malloc_sethook) refers to mem.o(.data) for rt_malloc_hook
    mem.o(i.rt_memory_info) refers to mem.o(.data) for mem_size_aligned
    mem.o(i.rt_realloc) refers to mem.o(i.rt_malloc) for rt_malloc
    mem.o(i.rt_realloc) refers to ipc.o(i.rt_sem_take) for rt_sem_take
    mem.o(i.rt_realloc) refers to ipc.o(i.rt_sem_release) for rt_sem_release
    mem.o(i.rt_realloc) refers to mem.o(i.plug_holes) for plug_holes
    mem.o(i.rt_realloc) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    mem.o(i.rt_realloc) refers to mem.o(i.rt_free) for rt_free
    mem.o(i.rt_realloc) refers to mem.o(.data) for mem_size_aligned
    mem.o(i.rt_realloc) refers to mem.o(.bss) for heap_sem
    mem.o(i.rt_system_heap_init) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    mem.o(i.rt_system_heap_init) refers to ipc.o(i.rt_sem_init) for rt_sem_init
    mem.o(i.rt_system_heap_init) refers to mem.o(.data) for mem_size_aligned
    mem.o(i.rt_system_heap_init) refers to mem.o(.bss) for heap_sem
    mem.o(RTMSymTab) refers to mem.o(i.rt_malloc) for rt_malloc
    mem.o(RTMSymTab) refers to mem.o(.constdata) for __rtmsym_rt_malloc_name
    mem.o(RTMSymTab) refers to mem.o(i.rt_realloc) for rt_realloc
    mem.o(RTMSymTab) refers to mem.o(i.rt_calloc) for rt_calloc
    mem.o(RTMSymTab) refers to mem.o(i.rt_free) for rt_free
    mempool.o(i.rt_mp_alloc) refers to thread.o(i.rt_thread_self) for rt_thread_self
    mempool.o(i.rt_mp_alloc) refers to context.o(.text) for rt_hw_interrupt_disable
    mempool.o(i.rt_mp_alloc) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    mempool.o(i.rt_mp_alloc) refers to thread.o(i.rt_thread_suspend) for rt_thread_suspend
    mempool.o(i.rt_mp_alloc) refers to clock.o(i.rt_tick_get) for rt_tick_get
    mempool.o(i.rt_mp_alloc) refers to timer.o(i.rt_timer_control) for rt_timer_control
    mempool.o(i.rt_mp_alloc) refers to timer.o(i.rt_timer_start) for rt_timer_start
    mempool.o(i.rt_mp_alloc) refers to scheduler.o(i.rt_schedule) for rt_schedule
    mempool.o(i.rt_mp_alloc) refers to mempool.o(.data) for rt_mp_alloc_hook
    mempool.o(i.rt_mp_alloc_sethook) refers to mempool.o(.data) for rt_mp_alloc_hook
    mempool.o(i.rt_mp_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    mempool.o(i.rt_mp_create) refers to mem.o(i.rt_malloc) for rt_malloc
    mempool.o(i.rt_mp_create) refers to object.o(i.rt_object_delete) for rt_object_delete
    mempool.o(i.rt_mp_create) refers to mempool.o(i.rt_list_init) for rt_list_init
    mempool.o(i.rt_mp_delete) refers to context.o(.text) for rt_hw_interrupt_disable
    mempool.o(i.rt_mp_delete) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    mempool.o(i.rt_mp_delete) refers to mempool.o(i.rt_list_isempty) for rt_list_isempty
    mempool.o(i.rt_mp_delete) refers to mem.o(i.rt_free) for rt_free
    mempool.o(i.rt_mp_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    mempool.o(i.rt_mp_detach) refers to context.o(.text) for rt_hw_interrupt_disable
    mempool.o(i.rt_mp_detach) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    mempool.o(i.rt_mp_detach) refers to mempool.o(i.rt_list_isempty) for rt_list_isempty
    mempool.o(i.rt_mp_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    mempool.o(i.rt_mp_free) refers to context.o(.text) for rt_hw_interrupt_disable
    mempool.o(i.rt_mp_free) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    mempool.o(i.rt_mp_free) refers to scheduler.o(i.rt_schedule) for rt_schedule
    mempool.o(i.rt_mp_free) refers to mempool.o(.data) for rt_mp_free_hook
    mempool.o(i.rt_mp_free_sethook) refers to mempool.o(.data) for rt_mp_free_hook
    mempool.o(i.rt_mp_init) refers to object.o(i.rt_object_init) for rt_object_init
    mempool.o(i.rt_mp_init) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    mempool.o(i.rt_mp_init) refers to mempool.o(i.rt_list_init) for rt_list_init
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_init) for rt_mp_init
    mempool.o(RTMSymTab) refers to mempool.o(.constdata) for __rtmsym_rt_mp_init_name
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_detach) for rt_mp_detach
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_create) for rt_mp_create
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_delete) for rt_mp_delete
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_alloc) for rt_mp_alloc
    mempool.o(RTMSymTab) refers to mempool.o(i.rt_mp_free) for rt_mp_free
    module.o(i._load_relocated_object) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    module.o(i._load_relocated_object) refers to mem.o(i.rt_malloc) for rt_malloc
    module.o(i._load_relocated_object) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    module.o(i._load_relocated_object) refers to object.o(i.rt_object_delete) for rt_object_delete
    module.o(i._load_relocated_object) refers to kservice.o(i.rt_memset) for rt_memset
    module.o(i._load_relocated_object) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    module.o(i._load_relocated_object) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    module.o(i._load_relocated_object) refers to module.o(i.rt_module_arm_relocate) for rt_module_arm_relocate
    module.o(i._load_relocated_object) refers to module.o(i.rt_module_symbol_find) for rt_module_symbol_find
    module.o(i._load_shared_object) refers to kservice.o(i.rt_memcmp) for rt_memcmp
    module.o(i._load_shared_object) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    module.o(i._load_shared_object) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    module.o(i._load_shared_object) refers to mem.o(i.rt_malloc) for rt_malloc
    module.o(i._load_shared_object) refers to object.o(i.rt_object_delete) for rt_object_delete
    module.o(i._load_shared_object) refers to kservice.o(i.rt_memset) for rt_memset
    module.o(i._load_shared_object) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    module.o(i._load_shared_object) refers to module.o(i.rt_module_arm_relocate) for rt_module_arm_relocate
    module.o(i._load_shared_object) refers to module.o(i.rt_module_symbol_find) for rt_module_symbol_find
    module.o(i._load_shared_object) refers to module.o(.data) for unsolved
    module.o(i._load_shared_object) refers to kservice.o(i.rt_strcmp) for rt_strcmp
    module.o(i._load_shared_object) refers to kservice.o(i.rt_strlen) for rt_strlen
    module.o(i.module_main_entry) refers to kservice.o(i.rt_memset) for rt_memset
    module.o(i.module_main_entry) refers to module.o(i._rt_module_split_arg) for _rt_module_split_arg
    module.o(i.rt_module_arm_relocate) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    module.o(i.rt_module_destroy) refers to object.o(i.rt_object_is_systemobject) for rt_object_is_systemobject
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_sem_detach) for rt_sem_detach
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_sem_delete) for rt_sem_delete
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mutex_detach) for rt_mutex_detach
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mutex_delete) for rt_mutex_delete
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_event_detach) for rt_event_detach
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_event_delete) for rt_event_delete
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mb_detach) for rt_mb_detach
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mb_delete) for rt_mb_delete
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mq_detach) for rt_mq_detach
    module.o(i.rt_module_destroy) refers to ipc.o(i.rt_mq_delete) for rt_mq_delete
    module.o(i.rt_module_destroy) refers to mempool.o(i.rt_mp_detach) for rt_mp_detach
    module.o(i.rt_module_destroy) refers to mempool.o(i.rt_mp_delete) for rt_mp_delete
    module.o(i.rt_module_destroy) refers to device.o(i.rt_device_unregister) for rt_device_unregister
    module.o(i.rt_module_destroy) refers to timer.o(i.rt_timer_detach) for rt_timer_detach
    module.o(i.rt_module_destroy) refers to timer.o(i.rt_timer_delete) for rt_timer_delete
    module.o(i.rt_module_destroy) refers to mem.o(i.rt_free) for rt_free
    module.o(i.rt_module_destroy) refers to object.o(i.rt_object_delete) for rt_object_delete
    module.o(i.rt_module_do_main) refers to kservice.o(i.rt_memcmp) for rt_memcmp
    module.o(i.rt_module_do_main) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    module.o(i.rt_module_do_main) refers to module.o(i._load_relocated_object) for _load_relocated_object
    module.o(i.rt_module_do_main) refers to module.o(i._load_shared_object) for _load_shared_object
    module.o(i.rt_module_do_main) refers to module.o(i.rt_module_init_object_container) for rt_module_init_object_container
    module.o(i.rt_module_do_main) refers to mem.o(i.rt_malloc) for rt_malloc
    module.o(i.rt_module_do_main) refers to kservice.o(i.rt_memcpy) for rt_memcpy
    module.o(i.rt_module_do_main) refers to thread.o(i.rt_thread_create) for rt_thread_create
    module.o(i.rt_module_do_main) refers to thread.o(i.rt_thread_startup) for rt_thread_startup
    module.o(i.rt_module_do_main) refers to module.o(i.module_main_entry) for module_main_entry
    module.o(i.rt_module_do_main) refers to module.o(.data) for rt_module_load_hook
    module.o(i.rt_module_find) refers to scheduler.o(i.rt_enter_critical) for rt_enter_critical
    module.o(i.rt_module_find) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    module.o(i.rt_module_find) refers to scheduler.o(i.rt_exit_critical) for rt_exit_critical
    module.o(i.rt_module_find) refers to object.o(.data) for rt_object_container
    module.o(i.rt_module_init_object_container) refers to module.o(i.rt_list_init) for rt_list_init
    module.o(i.rt_module_load) refers to kservice.o(i.rt_memcmp) for rt_memcmp
    module.o(i.rt_module_load) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    module.o(i.rt_module_load) refers to module.o(i._load_relocated_object) for _load_relocated_object
    module.o(i.rt_module_load) refers to module.o(i._load_shared_object) for _load_shared_object
    module.o(i.rt_module_load) refers to module.o(i.rt_module_init_object_container) for rt_module_init_object_container
    module.o(i.rt_module_load) refers to thread.o(i.rt_thread_create) for rt_thread_create
    module.o(i.rt_module_load) refers to thread.o(i.rt_thread_startup) for rt_thread_startup
    module.o(i.rt_module_load) refers to module.o(.data) for rt_module_load_hook
    module.o(i.rt_module_load_sethook) refers to module.o(.data) for rt_module_load_hook
    module.o(i.rt_module_self) refers to thread.o(i.rt_thread_self) for rt_thread_self
    module.o(i.rt_module_symbol_find) refers to kservice.o(i.rt_strcmp) for rt_strcmp
    module.o(i.rt_module_symbol_find) refers to module.o(.data) for _rt_module_symtab_begin
    module.o(i.rt_module_unload) refers to scheduler.o(i.rt_enter_critical) for rt_enter_critical
    module.o(i.rt_module_unload) refers to object.o(i.rt_object_is_systemobject) for rt_object_is_systemobject
    module.o(i.rt_module_unload) refers to thread.o(i.rt_thread_detach) for rt_thread_detach
    module.o(i.rt_module_unload) refers to thread.o(i.rt_thread_delete) for rt_thread_delete
    module.o(i.rt_module_unload) refers to scheduler.o(i.rt_exit_critical) for rt_exit_critical
    module.o(i.rt_module_unload) refers to module.o(.data) for rt_module_unload_hook
    module.o(i.rt_module_unload_sethook) refers to module.o(.data) for rt_module_unload_hook
    module.o(i.rt_system_module_init) refers to module.o(.data) for _rt_module_symtab_begin
    object.o(i.rt_object_allocate) refers to module.o(i.rt_module_self) for rt_module_self
    object.o(i.rt_object_allocate) refers to mem.o(i.rt_malloc) for rt_malloc
    object.o(i.rt_object_allocate) refers to kservice.o(i.rt_strncpy) for rt_strncpy
    object.o(i.rt_object_allocate) refers to context.o(.text) for rt_hw_interrupt_disable
    object.o(i.rt_object_allocate) refers to object.o(i.rt_list_insert_after) for rt_list_insert_after
    object.o(i.rt_object_allocate) refers to object.o(.data) for rt_object_container
    object.o(i.rt_object_attach_sethook) refers to object.o(.data) for rt_object_attach_hook
    object.o(i.rt_object_delete) refers to context.o(.text) for rt_hw_interrupt_disable
    object.o(i.rt_object_delete) refers to object.o(i.rt_list_remove) for rt_list_remove
    object.o(i.rt_object_delete) refers to mem.o(i.rt_free) for rt_free
    object.o(i.rt_object_delete) refers to object.o(.data) for rt_object_detach_hook
    object.o(i.rt_object_detach) refers to context.o(.text) for rt_hw_interrupt_disable
    object.o(i.rt_object_detach) refers to object.o(i.rt_list_remove) for rt_list_remove
    object.o(i.rt_object_detach) refers to object.o(.data) for rt_object_detach_hook
    object.o(i.rt_object_detach_sethook) refers to object.o(.data) for rt_object_detach_hook
    object.o(i.rt_object_find) refers to scheduler.o(i.rt_enter_critical) for rt_enter_critical
    object.o(i.rt_object_find) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    object.o(i.rt_object_find) refers to scheduler.o(i.rt_exit_critical) for rt_exit_critical
    object.o(i.rt_object_find) refers to object.o(.data) for rt_object_container
    object.o(i.rt_object_get_information) refers to object.o(.data) for rt_object_container
    object.o(i.rt_object_init) refers to module.o(i.rt_module_self) for rt_module_self
    object.o(i.rt_object_init) refers to kservice.o(i.rt_strncpy) for rt_strncpy
    object.o(i.rt_object_init) refers to context.o(.text) for rt_hw_interrupt_disable
    object.o(i.rt_object_init) refers to object.o(i.rt_list_insert_after) for rt_list_insert_after
    object.o(i.rt_object_init) refers to object.o(.data) for rt_object_container
    object.o(i.rt_object_put_sethook) refers to object.o(.data) for rt_object_put_hook
    object.o(i.rt_object_take_sethook) refers to object.o(.data) for rt_object_take_hook
    object.o(i.rt_object_trytake_sethook) refers to object.o(.data) for rt_object_trytake_hook
    object.o(RTMSymTab) refers to object.o(i.rt_object_get_information) for rt_object_get_information
    object.o(RTMSymTab) refers to object.o(.constdata) for __rtmsym_rt_object_get_information_name
    scheduler.o(i._rt_scheduler_stack_check) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    scheduler.o(i._rt_scheduler_stack_check) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_critical_level) refers to scheduler.o(.data) for rt_scheduler_lock_nest
    scheduler.o(i.rt_enter_critical) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_enter_critical) refers to scheduler.o(.data) for rt_scheduler_lock_nest
    scheduler.o(i.rt_exit_critical) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_exit_critical) refers to scheduler.o(i.rt_schedule) for rt_schedule
    scheduler.o(i.rt_exit_critical) refers to scheduler.o(.data) for rt_scheduler_lock_nest
    scheduler.o(i.rt_schedule) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_schedule) refers to kservice.o(i.__rt_ffs) for __rt_ffs
    scheduler.o(i.rt_schedule) refers to scheduler.o(i._rt_scheduler_stack_check) for _rt_scheduler_stack_check
    scheduler.o(i.rt_schedule) refers to scheduler.o(.data) for rt_scheduler_lock_nest
    scheduler.o(i.rt_schedule) refers to scheduler.o(.bss) for rt_thread_ready_table
    scheduler.o(i.rt_schedule) refers to irq.o(.data) for rt_interrupt_nest
    scheduler.o(i.rt_schedule_insert_thread) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_schedule_insert_thread) refers to scheduler.o(.bss) for rt_thread_priority_table
    scheduler.o(i.rt_schedule_insert_thread) refers to scheduler.o(.data) for rt_thread_ready_priority_group
    scheduler.o(i.rt_schedule_remove_thread) refers to context.o(.text) for rt_hw_interrupt_disable
    scheduler.o(i.rt_schedule_remove_thread) refers to scheduler.o(.bss) for rt_thread_priority_table
    scheduler.o(i.rt_schedule_remove_thread) refers to scheduler.o(.data) for rt_thread_ready_priority_group
    scheduler.o(i.rt_scheduler_sethook) refers to scheduler.o(.data) for rt_scheduler_hook
    scheduler.o(i.rt_system_scheduler_init) refers to scheduler.o(i.rt_list_init) for rt_list_init
    scheduler.o(i.rt_system_scheduler_init) refers to kservice.o(i.rt_memset) for rt_memset
    scheduler.o(i.rt_system_scheduler_init) refers to scheduler.o(.data) for rt_scheduler_lock_nest
    scheduler.o(i.rt_system_scheduler_init) refers to scheduler.o(.bss) for rt_thread_priority_table
    scheduler.o(i.rt_system_scheduler_start) refers to kservice.o(i.__rt_ffs) for __rt_ffs
    scheduler.o(i.rt_system_scheduler_start) refers to context.o(.text) for rt_hw_context_switch_to
    scheduler.o(i.rt_system_scheduler_start) refers to scheduler.o(.data) for rt_thread_ready_priority_group
    scheduler.o(i.rt_system_scheduler_start) refers to scheduler.o(.bss) for rt_thread_ready_table
    thread.o(i._rt_thread_init) refers to kservice.o(i.rt_memset) for rt_memset
    thread.o(i._rt_thread_init) refers to stack.o(i.rt_hw_stack_init) for rt_hw_stack_init
    thread.o(i._rt_thread_init) refers to timer.o(i.rt_timer_init) for rt_timer_init
    thread.o(i._rt_thread_init) refers to thread.o(i.rt_thread_exit) for rt_thread_exit
    thread.o(i._rt_thread_init) refers to thread.o(i.rt_thread_timeout) for rt_thread_timeout
    thread.o(i.rt_thread_control) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_control) refers to scheduler.o(i.rt_schedule_remove_thread) for rt_schedule_remove_thread
    thread.o(i.rt_thread_control) refers to scheduler.o(i.rt_schedule_insert_thread) for rt_schedule_insert_thread
    thread.o(i.rt_thread_control) refers to thread.o(i.rt_thread_startup) for rt_thread_startup
    thread.o(i.rt_thread_control) refers to thread.o(i.rt_thread_delete) for rt_thread_delete
    thread.o(i.rt_thread_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    thread.o(i.rt_thread_create) refers to mem.o(i.rt_malloc) for rt_malloc
    thread.o(i.rt_thread_create) refers to object.o(i.rt_object_delete) for rt_object_delete
    thread.o(i.rt_thread_create) refers to thread.o(i._rt_thread_init) for _rt_thread_init
    thread.o(i.rt_thread_delay) refers to thread.o(i.rt_thread_sleep) for rt_thread_sleep
    thread.o(i.rt_thread_delete) refers to scheduler.o(i.rt_schedule_remove_thread) for rt_schedule_remove_thread
    thread.o(i.rt_thread_delete) refers to timer.o(i.rt_timer_detach) for rt_timer_detach
    thread.o(i.rt_thread_delete) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_delete) refers to thread.o(i.rt_list_insert_after) for rt_list_insert_after
    thread.o(i.rt_thread_delete) refers to scheduler.o(.data) for rt_thread_defunct
    thread.o(i.rt_thread_detach) refers to scheduler.o(i.rt_schedule_remove_thread) for rt_schedule_remove_thread
    thread.o(i.rt_thread_detach) refers to timer.o(i.rt_timer_detach) for rt_timer_detach
    thread.o(i.rt_thread_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    thread.o(i.rt_thread_detach) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_detach) refers to thread.o(i.rt_list_insert_after) for rt_list_insert_after
    thread.o(i.rt_thread_detach) refers to scheduler.o(.data) for rt_thread_defunct
    thread.o(i.rt_thread_exit) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_exit) refers to scheduler.o(i.rt_schedule_remove_thread) for rt_schedule_remove_thread
    thread.o(i.rt_thread_exit) refers to timer.o(i.rt_timer_detach) for rt_timer_detach
    thread.o(i.rt_thread_exit) refers to object.o(i.rt_object_is_systemobject) for rt_object_is_systemobject
    thread.o(i.rt_thread_exit) refers to object.o(i.rt_object_detach) for rt_object_detach
    thread.o(i.rt_thread_exit) refers to thread.o(i.rt_list_insert_after) for rt_list_insert_after
    thread.o(i.rt_thread_exit) refers to scheduler.o(i.rt_schedule) for rt_schedule
    thread.o(i.rt_thread_exit) refers to scheduler.o(.data) for rt_current_thread
    thread.o(i.rt_thread_find) refers to thread.o(i.rt_thread_self) for rt_thread_self
    thread.o(i.rt_thread_find) refers to scheduler.o(i.rt_enter_critical) for rt_enter_critical
    thread.o(i.rt_thread_find) refers to kservice.o(i.rt_strncmp) for rt_strncmp
    thread.o(i.rt_thread_find) refers to scheduler.o(i.rt_exit_critical) for rt_exit_critical
    thread.o(i.rt_thread_find) refers to object.o(.data) for rt_object_container
    thread.o(i.rt_thread_init) refers to object.o(i.rt_object_init) for rt_object_init
    thread.o(i.rt_thread_init) refers to thread.o(i._rt_thread_init) for _rt_thread_init
    thread.o(i.rt_thread_resume) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_resume) refers to thread.o(i.rt_list_remove) for rt_list_remove
    thread.o(i.rt_thread_resume) refers to timer.o(i.rt_timer_stop) for rt_timer_stop
    thread.o(i.rt_thread_resume) refers to scheduler.o(i.rt_schedule_insert_thread) for rt_schedule_insert_thread
    thread.o(i.rt_thread_self) refers to scheduler.o(.data) for rt_current_thread
    thread.o(i.rt_thread_sleep) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_sleep) refers to thread.o(i.rt_thread_suspend) for rt_thread_suspend
    thread.o(i.rt_thread_sleep) refers to timer.o(i.rt_timer_control) for rt_timer_control
    thread.o(i.rt_thread_sleep) refers to timer.o(i.rt_timer_start) for rt_timer_start
    thread.o(i.rt_thread_sleep) refers to scheduler.o(i.rt_schedule) for rt_schedule
    thread.o(i.rt_thread_sleep) refers to scheduler.o(.data) for rt_current_thread
    thread.o(i.rt_thread_startup) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    thread.o(i.rt_thread_startup) refers to thread.o(i.rt_thread_self) for rt_thread_self
    thread.o(i.rt_thread_startup) refers to scheduler.o(i.rt_schedule) for rt_schedule
    thread.o(i.rt_thread_suspend) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_suspend) refers to scheduler.o(i.rt_schedule_remove_thread) for rt_schedule_remove_thread
    thread.o(i.rt_thread_suspend) refers to timer.o(i.rt_timer_stop) for rt_timer_stop
    thread.o(i.rt_thread_timeout) refers to thread.o(i.rt_list_remove) for rt_list_remove
    thread.o(i.rt_thread_timeout) refers to scheduler.o(i.rt_schedule_insert_thread) for rt_schedule_insert_thread
    thread.o(i.rt_thread_timeout) refers to scheduler.o(i.rt_schedule) for rt_schedule
    thread.o(i.rt_thread_yield) refers to context.o(.text) for rt_hw_interrupt_disable
    thread.o(i.rt_thread_yield) refers to thread.o(i.rt_list_remove) for rt_list_remove
    thread.o(i.rt_thread_yield) refers to scheduler.o(i.rt_schedule) for rt_schedule
    thread.o(i.rt_thread_yield) refers to scheduler.o(.data) for rt_current_thread
    thread.o(i.rt_thread_yield) refers to scheduler.o(.bss) for rt_thread_priority_table
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_init) for rt_thread_init
    thread.o(RTMSymTab) refers to thread.o(.constdata) for __rtmsym_rt_thread_init_name
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_self) for rt_thread_self
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_startup) for rt_thread_startup
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_detach) for rt_thread_detach
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_create) for rt_thread_create
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_delete) for rt_thread_delete
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_yield) for rt_thread_yield
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_delay) for rt_thread_delay
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_control) for rt_thread_control
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_suspend) for rt_thread_suspend
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_resume) for rt_thread_resume
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_timeout) for rt_thread_timeout
    thread.o(RTMSymTab) refers to thread.o(i.rt_thread_find) for rt_thread_find
    timer.o(i._rt_timer_init) refers to timer.o(i.rt_list_init) for rt_list_init
    timer.o(i.rt_system_timer_init) refers to timer.o(i.rt_list_init) for rt_list_init
    timer.o(i.rt_system_timer_init) refers to timer.o(.data) for rt_timer_list
    timer.o(i.rt_timer_check) refers to clock.o(i.rt_tick_get) for rt_tick_get
    timer.o(i.rt_timer_check) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(i.rt_timer_check) refers to timer.o(i._rt_timer_remove) for _rt_timer_remove
    timer.o(i.rt_timer_check) refers to timer.o(i.rt_timer_start) for rt_timer_start
    timer.o(i.rt_timer_check) refers to timer.o(i.rt_list_isempty) for rt_list_isempty
    timer.o(i.rt_timer_check) refers to timer.o(.data) for rt_timer_list
    timer.o(i.rt_timer_create) refers to object.o(i.rt_object_allocate) for rt_object_allocate
    timer.o(i.rt_timer_create) refers to timer.o(i._rt_timer_init) for _rt_timer_init
    timer.o(i.rt_timer_delete) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(i.rt_timer_delete) refers to timer.o(i._rt_timer_remove) for _rt_timer_remove
    timer.o(i.rt_timer_delete) refers to object.o(i.rt_object_delete) for rt_object_delete
    timer.o(i.rt_timer_detach) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(i.rt_timer_detach) refers to timer.o(i._rt_timer_remove) for _rt_timer_remove
    timer.o(i.rt_timer_detach) refers to object.o(i.rt_object_detach) for rt_object_detach
    timer.o(i.rt_timer_init) refers to object.o(i.rt_object_init) for rt_object_init
    timer.o(i.rt_timer_init) refers to timer.o(i._rt_timer_init) for _rt_timer_init
    timer.o(i.rt_timer_list_next_timeout) refers to timer.o(i.rt_list_isempty) for rt_list_isempty
    timer.o(i.rt_timer_next_timeout_tick) refers to timer.o(i.rt_timer_list_next_timeout) for rt_timer_list_next_timeout
    timer.o(i.rt_timer_next_timeout_tick) refers to timer.o(.data) for rt_timer_list
    timer.o(i.rt_timer_start) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(i.rt_timer_start) refers to timer.o(i._rt_timer_remove) for _rt_timer_remove
    timer.o(i.rt_timer_start) refers to clock.o(i.rt_tick_get) for rt_tick_get
    timer.o(i.rt_timer_start) refers to timer.o(i.rt_list_insert_after) for rt_list_insert_after
    timer.o(i.rt_timer_start) refers to object.o(.data) for rt_object_take_hook
    timer.o(i.rt_timer_start) refers to timer.o(.data) for rt_timer_list
    timer.o(i.rt_timer_stop) refers to context.o(.text) for rt_hw_interrupt_disable
    timer.o(i.rt_timer_stop) refers to timer.o(i._rt_timer_remove) for _rt_timer_remove
    timer.o(i.rt_timer_stop) refers to object.o(.data) for rt_object_put_hook
    timer.o(i.rt_timer_timeout_sethook) refers to timer.o(.data) for rt_timer_timeout_hook
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_init) for rt_timer_init
    timer.o(RTMSymTab) refers to timer.o(.constdata) for __rtmsym_rt_timer_init_name
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_detach) for rt_timer_detach
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_create) for rt_timer_create
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_delete) for rt_timer_delete
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_start) for rt_timer_start
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_stop) for rt_timer_stop
    timer.o(RTMSymTab) refers to timer.o(i.rt_timer_control) for rt_timer_control
    main.o(i.main) refers to context.o(.text) for rt_hw_interrupt_disable
    main.o(i.main) refers to cpu.o(i.rt_hw_cpu_icache_enable) for rt_hw_cpu_icache_enable
    main.o(i.main) refers to cpu.o(i.rt_hw_cpu_dcache_enable) for rt_hw_cpu_dcache_enable
    main.o(i.main) refers to interrupt.o(i.rt_hw_interrupt_init) for rt_hw_interrupt_init
    main.o(i.main) refers to board.o(i.rt_hw_board_init) for rt_hw_board_init
    main.o(i.main) refers to kservice.o(i.rt_show_version) for rt_show_version
    context.o(.text) refers to interrupt.o(.data) for rt_thread_switch_interrupt_flag
    interrupt.o(i.rt_hw_interrupt_handle) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    interrupt.o(i.rt_hw_interrupt_init) refers to kservice.o(i.rt_memset) for rt_memset
    interrupt.o(i.rt_hw_interrupt_init) refers to interrupt.o(.bss) for isr_table
    interrupt.o(i.rt_hw_interrupt_init) refers to interrupt.o(i.rt_hw_interrupt_handle) for rt_hw_interrupt_handle
    interrupt.o(i.rt_hw_interrupt_init) refers to irq.o(.data) for rt_interrupt_nest
    interrupt.o(i.rt_hw_interrupt_init) refers to interrupt.o(.data) for rt_interrupt_from_thread
    interrupt.o(i.rt_hw_interrupt_install) refers to kservice.o(i.rt_strncpy) for rt_strncpy
    interrupt.o(i.rt_hw_interrupt_install) refers to interrupt.o(.bss) for isr_table
    interrupt.o(i.rt_hw_interrupt_umask) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    cpu.o(i.rt_hw_cpu_dcache_disable) refers to cpu.o(i.cache_disable) for cache_disable
    cpu.o(i.rt_hw_cpu_dcache_enable) refers to cpu.o(i.cache_enable) for cache_enable
    cpu.o(i.rt_hw_cpu_icache_disable) refers to cpu.o(i.cache_disable) for cache_disable
    cpu.o(i.rt_hw_cpu_icache_enable) refers to cpu.o(i.cache_enable) for cache_enable
    cpu.o(i.rt_hw_cpu_shutdown) refers to kservice.o(i.rt_kprintf) for rt_kprintf
    cpu.o(i.rt_hw_cpu_shutdown) refers to context.o(.text) for rt_hw_interrupt_disable
    board.o(i.rt_hw_board_init) refers to system_clock.o(i.rt_hw_clock_init) for rt_hw_clock_init
    board.o(i.rt_hw_board_init) refers to system_clock.o(i.rt_hw_get_clock) for rt_hw_get_clock
    board.o(i.rt_hw_board_init) refers to board.o(i.rt_hw_uart_init) for rt_hw_uart_init
    board.o(i.rt_hw_board_init) refers to board.o(i.rt_hw_timer_init) for rt_hw_timer_init
    board.o(i.rt_hw_timer_init) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    board.o(i.rt_hw_timer_init) refers to interrupt.o(i.rt_hw_interrupt_install) for rt_hw_interrupt_install
    board.o(i.rt_hw_timer_init) refers to interrupt.o(i.rt_hw_interrupt_umask) for rt_hw_interrupt_umask
    board.o(i.rt_hw_timer_init) refers to system_clock.o(.data) for PCLK
    board.o(i.rt_hw_timer_init) refers to board.o(i.rt_timer_handler) for rt_timer_handler
    board.o(i.rt_hw_uart_init) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    board.o(i.rt_hw_uart_init) refers to interrupt.o(i.rt_hw_interrupt_install) for rt_hw_interrupt_install
    board.o(i.rt_hw_uart_init) refers to interrupt.o(i.rt_hw_interrupt_umask) for rt_hw_interrupt_umask
    board.o(i.rt_hw_uart_init) refers to board.o(.data) for uart0
    board.o(i.rt_hw_uart_init) refers to system_clock.o(.data) for PCLK
    board.o(i.rt_hw_uart_init) refers to board.o(i.rt_serial0_handler) for rt_serial0_handler
    board.o(i.rt_hw_uart_init) refers to board.o(i.rt_serial2_handler) for rt_serial2_handler
    board.o(i.rt_serial0_handler) refers to serial.o(i.rt_hw_serial_isr) for rt_hw_serial_isr
    board.o(i.rt_serial0_handler) refers to board.o(.bss) for uart0_device
    board.o(i.rt_serial2_handler) refers to serial.o(i.rt_hw_serial_isr) for rt_hw_serial_isr
    board.o(i.rt_serial2_handler) refers to board.o(.bss) for uart2_device
    board.o(i.rt_timer_handler) refers to clock.o(i.rt_tick_increase) for rt_tick_increase
    board.o(.data) refers to board.o(.bss) for uart0_int_rx
    serial.o(i.rt_hw_serial_isr) refers to serial.o(i.rt_serial_savechar) for rt_serial_savechar
    serial.o(i.rt_hw_serial_register) refers to device.o(i.rt_device_register) for rt_device_register
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_init) for rt_serial_init
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_open) for rt_serial_open
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_close) for rt_serial_close
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_read) for rt_serial_read
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_write) for rt_serial_write
    serial.o(i.rt_hw_serial_register) refers to serial.o(i.rt_serial_control) for rt_serial_control
    serial.o(i.rt_serial_init) refers to kservice.o(i.rt_memset) for rt_memset
    serial.o(i.rt_serial_read) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    serial.o(i.rt_serial_read) refers to context.o(.text) for rt_hw_interrupt_disable
    serial.o(i.rt_serial_savechar) refers to context.o(.text) for rt_hw_interrupt_disable
    serial.o(i.rt_serial_write) refers to kservice.o(i.rt_set_errno) for rt_set_errno
    system_clock.o(i.rt_hw_clock_init) refers to system_clock.o(i.rt_hw_set_mpll_clock) for rt_hw_set_mpll_clock
    system_clock.o(i.rt_hw_clock_init) refers to system_clock.o(i.rt_hw_set_upll_clock) for rt_hw_set_upll_clock
    system_clock.o(i.rt_hw_clock_init) refers to system_clock.o(i.rt_hw_set_divider) for rt_hw_set_divider
    system_clock.o(i.rt_hw_get_clock) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    system_clock.o(i.rt_hw_get_clock) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    system_clock.o(i.rt_hw_get_clock) refers to system_clock.o(.data) for FCLK
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_disable_dcache) for mmu_disable_dcache
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_disable_icache) for mmu_disable_icache
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_clean_invalidated_cache_index) for mmu_clean_invalidated_cache_index
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_invalidate_icache) for mmu_invalidate_icache
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_enable_icache) for mmu_enable_icache
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_disable) for mmu_disable
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_invalidate_tlb) for mmu_invalidate_tlb
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_setmtt) for mmu_setmtt
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_setttbase) for mmu_setttbase
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_set_domain) for mmu_set_domain
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_enable_alignfault) for mmu_enable_alignfault
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_enable) for mmu_enable
    mmu.o(i.rt_hw_mmu_init) refers to mmu.o(i.mmu_enable_dcache) for mmu_enable_dcache
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div2
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div2
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to start.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing clock.o(i.rt_system_tick_init), (4 bytes).
    Removing clock.o(i.rt_tick_from_millisecond), (40 bytes).
    Removing clock.o(i.rt_tick_set), (44 bytes).
    Removing clock.o(.constdata), (37 bytes).
    Removing clock.o(RTMSymTab), (16 bytes).
    Removing device.o(i.rt_device_close), (132 bytes).
    Removing device.o(i.rt_device_control), (68 bytes).
    Removing device.o(i.rt_device_find), (136 bytes).
    Removing device.o(i.rt_device_init), (168 bytes).
    Removing device.o(i.rt_device_init_all), (8 bytes).
    Removing device.o(i.rt_device_open), (288 bytes).
    Removing device.o(i.rt_device_read), (112 bytes).
    Removing device.o(i.rt_device_register), (96 bytes).
    Removing device.o(i.rt_device_set_rx_indicate), (16 bytes).
    Removing device.o(i.rt_device_set_tx_complete), (16 bytes).
    Removing device.o(i.rt_device_unregister), (28 bytes).
    Removing device.o(.constdata), (187 bytes).
    Removing device.o(RTMSymTab), (80 bytes).
    Removing idle.o(i._has_defunct_thread), (36 bytes).
    Removing idle.o(i.rt_thread_idle_entry), (48 bytes).
    Removing idle.o(i.rt_thread_idle_excute), (324 bytes).
    Removing idle.o(i.rt_thread_idle_init), (92 bytes).
    Removing idle.o(i.rt_thread_idle_sethook), (16 bytes).
    Removing idle.o(.bss), (444 bytes).
    Removing idle.o(.data), (4 bytes).
    Removing ipc.o(i.rt_event_control), (80 bytes).
    Removing ipc.o(i.rt_event_create), (76 bytes).
    Removing ipc.o(i.rt_event_delete), (36 bytes).
    Removing ipc.o(i.rt_event_detach), (36 bytes).
    Removing ipc.o(i.rt_event_init), (60 bytes).
    Removing ipc.o(i.rt_event_recv), (432 bytes).
    Removing ipc.o(i.rt_event_send), (336 bytes).
    Removing ipc.o(i.rt_ipc_list_resume), (36 bytes).
    Removing ipc.o(i.rt_ipc_list_resume_all), (80 bytes).
    Removing ipc.o(i.rt_ipc_list_suspend), (168 bytes).
    Removing ipc.o(i.rt_ipc_object_init), (28 bytes).
    Removing ipc.o(i.rt_list_init), (12 bytes).
    Removing ipc.o(i.rt_list_insert_before), (28 bytes).
    Removing ipc.o(i.rt_list_isempty), (32 bytes).
    Removing ipc.o(i.rt_mb_control), (96 bytes).
    Removing ipc.o(i.rt_mb_create), (144 bytes).
    Removing ipc.o(i.rt_mb_delete), (52 bytes).
    Removing ipc.o(i.rt_mb_detach), (44 bytes).
    Removing ipc.o(i.rt_mb_init), (96 bytes).
    Removing ipc.o(i.rt_mb_recv), (552 bytes).
    Removing ipc.o(i.rt_mb_send), (36 bytes).
    Removing ipc.o(i.rt_mb_send_wait), (464 bytes).
    Removing ipc.o(i.rt_mq_control), (140 bytes).
    Removing ipc.o(i.rt_mq_create), (220 bytes).
    Removing ipc.o(i.rt_mq_delete), (44 bytes).
    Removing ipc.o(i.rt_mq_detach), (36 bytes).
    Removing ipc.o(i.rt_mq_init), (176 bytes).
    Removing ipc.o(i.rt_mq_recv), (516 bytes).
    Removing ipc.o(i.rt_mq_send), (288 bytes).
    Removing ipc.o(i.rt_mq_urgent), (268 bytes).
    Removing ipc.o(i.rt_mutex_control), (12 bytes).
    Removing ipc.o(i.rt_mutex_create), (100 bytes).
    Removing ipc.o(i.rt_mutex_delete), (36 bytes).
    Removing ipc.o(i.rt_mutex_detach), (36 bytes).
    Removing ipc.o(i.rt_mutex_init), (84 bytes).
    Removing ipc.o(i.rt_mutex_release), (300 bytes).
    Removing ipc.o(i.rt_mutex_take), (392 bytes).
    Removing ipc.o(i.rt_sem_control), (84 bytes).
    Removing ipc.o(i.rt_sem_create), (76 bytes).
    Removing ipc.o(i.rt_sem_delete), (36 bytes).
    Removing ipc.o(i.rt_sem_detach), (36 bytes).
    Removing ipc.o(i.rt_sem_init), (64 bytes).
    Removing ipc.o(i.rt_sem_release), (148 bytes).
    Removing ipc.o(i.rt_sem_take), (288 bytes).
    Removing ipc.o(i.rt_sem_trytake), (28 bytes).
    Removing ipc.o(.constdata), (529 bytes).
    Removing ipc.o(RTMSymTab), (304 bytes).
    Removing irq.o(i.rt_interrupt_enter), (52 bytes).
    Removing irq.o(i.rt_interrupt_leave), (52 bytes).
    Removing irq.o(.constdata), (107 bytes).
    Removing irq.o(RTMSymTab), (40 bytes).
    Removing kservice.o(i._rt_errno), (64 bytes).
    Removing kservice.o(i.rt_console_get_device), (16 bytes).
    Removing kservice.o(i.rt_console_set_device), (100 bytes).
    Removing kservice.o(i.rt_free_align), (28 bytes).
    Removing kservice.o(i.rt_get_errno), (72 bytes).
    Removing kservice.o(i.rt_malloc_align), (112 bytes).
    Removing kservice.o(i.rt_memcmp), (80 bytes).
    Removing kservice.o(i.rt_memcpy), (172 bytes).
    Removing kservice.o(i.rt_memmove), (120 bytes).
    Removing kservice.o(i.rt_snprintf), (72 bytes).
    Removing kservice.o(i.rt_sprintf), (64 bytes).
    Removing kservice.o(i.rt_strcasecmp), (92 bytes).
    Removing kservice.o(i.rt_strcmp), (60 bytes).
    Removing kservice.o(i.rt_strdup), (76 bytes).
    Removing kservice.o(i.rt_strncmp), (84 bytes).
    Removing kservice.o(i.rt_strstr), (116 bytes).
    Removing kservice.o(i.rt_vsprintf), (40 bytes).
    Removing kservice.o(RTMSymTab), (200 bytes).
    Removing mem.o(i.plug_holes), (240 bytes).
    Removing mem.o(i.rt_calloc), (60 bytes).
    Removing mem.o(i.rt_free), (244 bytes).
    Removing mem.o(i.rt_free_sethook), (16 bytes).
    Removing mem.o(i.rt_malloc), (676 bytes).
    Removing mem.o(i.rt_malloc_sethook), (16 bytes).
    Removing mem.o(i.rt_memory_info), (76 bytes).
    Removing mem.o(i.rt_realloc), (440 bytes).
    Removing mem.o(i.rt_system_heap_init), (372 bytes).
    Removing mem.o(.bss), (60 bytes).
    Removing mem.o(.constdata), (39 bytes).
    Removing mem.o(.data), (32 bytes).
    Removing mem.o(RTMSymTab), (32 bytes).
    Removing mempool.o(i.rt_list_init), (12 bytes).
    Removing mempool.o(i.rt_list_isempty), (32 bytes).
    Removing mempool.o(i.rt_mp_alloc), (380 bytes).
    Removing mempool.o(i.rt_mp_alloc_sethook), (16 bytes).
    Removing mempool.o(i.rt_mp_create), (232 bytes).
    Removing mempool.o(i.rt_mp_delete), (108 bytes).
    Removing mempool.o(i.rt_mp_detach), (100 bytes).
    Removing mempool.o(i.rt_mp_free), (184 bytes).
    Removing mempool.o(i.rt_mp_free_sethook), (16 bytes).
    Removing mempool.o(i.rt_mp_init), (192 bytes).
    Removing mempool.o(.constdata), (73 bytes).
    Removing mempool.o(.data), (8 bytes).
    Removing mempool.o(RTMSymTab), (48 bytes).
    Removing module.o(i._load_relocated_object), (2156 bytes).
    Removing module.o(i._load_shared_object), (1488 bytes).
    Removing module.o(i._rt_module_split_arg), (284 bytes).
    Removing module.o(i.module_main_entry), (124 bytes).
    Removing module.o(i.rt_list_init), (12 bytes).
    Removing module.o(i.rt_module_arm_relocate), (724 bytes).
    Removing module.o(i.rt_module_destroy), (616 bytes).
    Removing module.o(i.rt_module_do_main), (532 bytes).
    Removing module.o(i.rt_module_find), (100 bytes).
    Removing module.o(i.rt_module_init_object_container), (232 bytes).
    Removing module.o(i.rt_module_load), (480 bytes).
    Removing module.o(i.rt_module_load_sethook), (16 bytes).
    Removing module.o(i.rt_module_self), (40 bytes).
    Removing module.o(i.rt_module_symbol_find), (88 bytes).
    Removing module.o(i.rt_module_unload), (184 bytes).
    Removing module.o(i.rt_module_unload_sethook), (16 bytes).
    Removing module.o(i.rt_system_module_init), (48 bytes).
    Removing module.o(.data), (20 bytes).
    Removing object.o(i.rt_list_insert_after), (28 bytes).
    Removing object.o(i.rt_list_remove), (32 bytes).
    Removing object.o(i.rt_object_allocate), (240 bytes).
    Removing object.o(i.rt_object_attach_sethook), (16 bytes).
    Removing object.o(i.rt_object_delete), (96 bytes).
    Removing object.o(i.rt_object_detach), (88 bytes).
    Removing object.o(i.rt_object_detach_sethook), (16 bytes).
    Removing object.o(i.rt_object_find), (400 bytes).
    Removing object.o(i.rt_object_get_information), (20 bytes).
    Removing object.o(i.rt_object_init), (168 bytes).
    Removing object.o(i.rt_object_is_systemobject), (36 bytes).
    Removing object.o(i.rt_object_put_sethook), (16 bytes).
    Removing object.o(i.rt_object_take_sethook), (16 bytes).
    Removing object.o(i.rt_object_trytake_sethook), (16 bytes).
    Removing object.o(i.rt_system_object_init), (4 bytes).
    Removing object.o(.constdata), (26 bytes).
    Removing object.o(RTMSymTab), (8 bytes).
    Removing scheduler.o(i.rt_critical_level), (24 bytes).
    Removing scheduler.o(i.rt_enter_critical), (60 bytes).
    Removing scheduler.o(i.rt_exit_critical), (100 bytes).
    Removing scheduler.o(i.rt_list_init), (12 bytes).
    Removing scheduler.o(i.rt_schedule_insert_thread), (152 bytes).
    Removing scheduler.o(i.rt_schedule_remove_thread), (200 bytes).
    Removing scheduler.o(i.rt_scheduler_sethook), (16 bytes).
    Removing scheduler.o(i.rt_system_scheduler_init), (140 bytes).
    Removing scheduler.o(i.rt_system_scheduler_start), (92 bytes).
    Removing thread.o(i._rt_thread_init), (204 bytes).
    Removing thread.o(i.rt_list_insert_after), (28 bytes).
    Removing thread.o(i.rt_thread_control), (252 bytes).
    Removing thread.o(i.rt_thread_create), (136 bytes).
    Removing thread.o(i.rt_thread_delay), (24 bytes).
    Removing thread.o(i.rt_thread_delete), (76 bytes).
    Removing thread.o(i.rt_thread_detach), (96 bytes).
    Removing thread.o(i.rt_thread_exit), (124 bytes).
    Removing thread.o(i.rt_thread_find), (136 bytes).
    Removing thread.o(i.rt_thread_init), (80 bytes).
    Removing thread.o(i.rt_thread_resume), (80 bytes).
    Removing thread.o(i.rt_thread_sleep), (100 bytes).
    Removing thread.o(i.rt_thread_startup), (104 bytes).
    Removing thread.o(i.rt_thread_suspend), (80 bytes).
    Removing thread.o(i.rt_thread_timeout), (48 bytes).
    Removing thread.o(.constdata), (217 bytes).
    Removing thread.o(RTMSymTab), (104 bytes).
    Removing timer.o(i._rt_timer_init), (100 bytes).
    Removing timer.o(i.rt_list_init), (12 bytes).
    Removing timer.o(i.rt_system_timer_init), (48 bytes).
    Removing timer.o(i.rt_system_timer_thread_init), (4 bytes).
    Removing timer.o(i.rt_timer_control), (124 bytes).
    Removing timer.o(i.rt_timer_create), (92 bytes).
    Removing timer.o(i.rt_timer_delete), (52 bytes).
    Removing timer.o(i.rt_timer_detach), (52 bytes).
    Removing timer.o(i.rt_timer_init), (76 bytes).
    Removing timer.o(i.rt_timer_list_next_timeout), (52 bytes).
    Removing timer.o(i.rt_timer_next_timeout_tick), (24 bytes).
    Removing timer.o(i.rt_timer_stop), (128 bytes).
    Removing timer.o(i.rt_timer_timeout_sethook), (16 bytes).
    Removing timer.o(.constdata), (108 bytes).
    Removing timer.o(RTMSymTab), (56 bytes).
    Removing interrupt.o(i.rt_hw_interrupt_mask), (28 bytes).
    Removing stack.o(i.rt_hw_stack_init), (224 bytes).
    Removing cpu.o(i.cache_disable), (16 bytes).
    Removing cpu.o(i.rt_hw_cpu_dcache_disable), (20 bytes).
    Removing cpu.o(i.rt_hw_cpu_dcache_status), (20 bytes).
    Removing cpu.o(i.rt_hw_cpu_icache_disable), (20 bytes).
    Removing cpu.o(i.rt_hw_cpu_icache_status), (20 bytes).
    Removing cpu.o(i.rt_hw_cpu_reset), (48 bytes).
    Removing cpu.o(i.rt_hw_cpu_shutdown), (56 bytes).
    Removing serial.o(i.rt_hw_serial_register), (144 bytes).
    Removing serial.o(i.rt_serial_close), (12 bytes).
    Removing serial.o(i.rt_serial_control), (68 bytes).
    Removing serial.o(i.rt_serial_init), (156 bytes).
    Removing serial.o(i.rt_serial_open), (12 bytes).
    Removing serial.o(i.rt_serial_read), (292 bytes).
    Removing serial.o(i.rt_serial_write), (328 bytes).
    Removing mmu.o(i.mmu_clean_invalidated_cache_index), (8 bytes).
    Removing mmu.o(i.mmu_disable), (16 bytes).
    Removing mmu.o(i.mmu_disable_alignfault), (16 bytes).
    Removing mmu.o(i.mmu_disable_dcache), (16 bytes).
    Removing mmu.o(i.mmu_disable_icache), (16 bytes).
    Removing mmu.o(i.mmu_enable), (16 bytes).
    Removing mmu.o(i.mmu_enable_alignfault), (16 bytes).
    Removing mmu.o(i.mmu_enable_dcache), (16 bytes).
    Removing mmu.o(i.mmu_enable_icache), (16 bytes).
    Removing mmu.o(i.mmu_invalidate_icache), (12 bytes).
    Removing mmu.o(i.mmu_invalidate_tlb), (12 bytes).
    Removing mmu.o(i.mmu_set_domain), (8 bytes).
    Removing mmu.o(i.mmu_setmtt), (100 bytes).
    Removing mmu.o(i.mmu_setttbase), (8 bytes).
    Removing mmu.o(i.rt_hw_mmu_init), (504 bytes).

227 unused section(s) (total 29387 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

4 Veneer(s) (total 28 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../clib/divrt.s                          0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\clock.c 0x00000000   Number         0  clock.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\device.c 0x00000000   Number         0  device.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\idle.c  0x00000000   Number         0  idle.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\ipc.c   0x00000000   Number         0  ipc.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\irq.c   0x00000000   Number         0  irq.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\kservice.c 0x00000000   Number         0  kservice.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\mem.c   0x00000000   Number         0  mem.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\memheap.c 0x00000000   Number         0  memheap.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\mempool.c 0x00000000   Number         0  mempool.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\module.c 0x00000000   Number         0  module.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\object.c 0x00000000   Number         0  object.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\scheduler.c 0x00000000   Number         0  scheduler.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\slab.c  0x00000000   Number         0  slab.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\thread.c 0x00000000   Number         0  thread.o ABSOLUTE
    ..\..\..\..\kernel\rt-thread\src\timer.c 0x00000000   Number         0  timer.o ABSOLUTE
    ..\..\..\..\mcu\s3c2440\start.S          0x00000000   Number         0  start.o ABSOLUTE
    ..\..\board.c                            0x00000000   Number         0  board.o ABSOLUTE
    ..\..\context.S                          0x00000000   Number         0  context.o ABSOLUTE
    ..\..\cpu.c                              0x00000000   Number         0  cpu.o ABSOLUTE
    ..\..\interrupt.c                        0x00000000   Number         0  interrupt.o ABSOLUTE
    ..\..\main.c                             0x00000000   Number         0  main.o ABSOLUTE
    ..\..\mmu.c                              0x00000000   Number         0  mmu.o ABSOLUTE
    ..\..\serial.c                           0x00000000   Number         0  serial.o ABSOLUTE
    ..\..\stack.c                            0x00000000   Number         0  stack.o ABSOLUTE
    ..\..\system_clock.c                     0x00000000   Number         0  system_clock.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x30000000   Section      172  start.o(RESET)
    Undef_Handler                            0x3000003c   ARM Code       4  start.o(RESET)
    SWI_Handler                              0x30000040   ARM Code       4  start.o(RESET)
    PAbt_Handler                             0x30000044   ARM Code       4  start.o(RESET)
    DAbt_Handler                             0x30000048   ARM Code       4  start.o(RESET)
    FIQ_Handler                              0x30000050   ARM Code       4  start.o(RESET)
    !!!main                                  0x300000ac   Section        8  __main.o(!!!main)
    !!!scatter                               0x300000b4   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x300000f0   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x30000124   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x30000126   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x30000126   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x3000013c   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x30000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x30000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x30000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x30000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x30000140   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x30000140   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x30000148   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x30000148   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x30000148   Section        8  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x30000150   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x30000150   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x30000154   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x30000154   Section       40  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x30000180   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x30000184   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x30000184   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x30000188   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x30000190   Section       32  start.o(.text)
    .text                                    0x300001b0   Section      156  context.o(.text)
    .text                                    0x3000024c   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x30000278   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div5                               0x3000029c   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div2                               0x300002c0   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x300002fc   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x300003cc   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x3000042c   Section        0  exit.o(.text)
    .text                                    0x30000438   Section       12  libspace.o(.text)
    .text                                    0x3000044c   Section        0  sys_exit.o(.text)
    .text                                    0x30000458   Section        4  use_no_semi.o(.text)
    .text                                    0x3000045c   Section        0  indicate_semi.o(.text)
    .text_udiv                               0x3000045c   Section       36  aeabi_sdiv.o(.text_udiv)
    i.__rt_ffs                               0x30000480   Section        0  kservice.o(i.__rt_ffs)
    i._rt_scheduler_stack_check              0x30000508   Section        0  scheduler.o(i._rt_scheduler_stack_check)
    _rt_scheduler_stack_check                0x30000508   ARM Code     124  scheduler.o(i._rt_scheduler_stack_check)
    i._rt_timer_remove                       0x300005d8   Section        0  timer.o(i._rt_timer_remove)
    _rt_timer_remove                         0x300005d8   ARM Code      76  timer.o(i._rt_timer_remove)
    i.cache_enable                           0x30000624   Section        0  cpu.o(i.cache_enable)
    cache_enable                             0x30000624   ARM Code      16  cpu.o(i.cache_enable)
    i.main                                   0x30000634   Section        0  main.o(i.main)
    i.print_number                           0x3000065c   Section        0  kservice.o(i.print_number)
    print_number                             0x3000065c   ARM Code     624  kservice.o(i.print_number)
    i.rt_device_write                        0x300008d4   Section        0  device.o(i.rt_device_write)
    i.rt_hw_board_init                       0x30000944   Section        0  board.o(i.rt_hw_board_init)
    i.rt_hw_clock_init                       0x30000960   Section        0  system_clock.o(i.rt_hw_clock_init)
    i.rt_hw_console_output                   0x300009a4   Section        0  kservice.o(i.rt_hw_console_output)
    i.rt_hw_cpu_dcache_enable                0x300009a8   Section        0  cpu.o(i.rt_hw_cpu_dcache_enable)
    i.rt_hw_cpu_icache_enable                0x300009bc   Section        0  cpu.o(i.rt_hw_cpu_icache_enable)
    i.rt_hw_get_clock                        0x300009d0   Section        0  system_clock.o(i.rt_hw_get_clock)
    i.rt_hw_interrupt_handle                 0x30000b64   Section        0  interrupt.o(i.rt_hw_interrupt_handle)
    rt_hw_interrupt_handle                   0x30000b64   ARM Code      32  interrupt.o(i.rt_hw_interrupt_handle)
    i.rt_hw_interrupt_init                   0x30000ba8   Section        0  interrupt.o(i.rt_hw_interrupt_init)
    i.rt_hw_interrupt_install                0x30000c54   Section        0  interrupt.o(i.rt_hw_interrupt_install)
    i.rt_hw_interrupt_umask                  0x30000cdc   Section        0  interrupt.o(i.rt_hw_interrupt_umask)
    i.rt_hw_serial_isr                       0x30000d54   Section        0  serial.o(i.rt_hw_serial_isr)
    i.rt_hw_set_divider                      0x30000e04   Section        0  system_clock.o(i.rt_hw_set_divider)
    i.rt_hw_set_mpll_clock                   0x30000e14   Section        0  system_clock.o(i.rt_hw_set_mpll_clock)
    i.rt_hw_set_upll_clock                   0x30000e28   Section        0  system_clock.o(i.rt_hw_set_upll_clock)
    i.rt_hw_timer_init                       0x30000e40   Section        0  board.o(i.rt_hw_timer_init)
    rt_hw_timer_init                         0x30000e40   ARM Code     180  board.o(i.rt_hw_timer_init)
    i.rt_hw_uart_init                        0x30000f04   Section        0  board.o(i.rt_hw_uart_init)
    rt_hw_uart_init                          0x30000f04   ARM Code     364  board.o(i.rt_hw_uart_init)
    i.rt_interrupt_get_nest                  0x3000109c   Section        0  irq.o(i.rt_interrupt_get_nest)
    i.rt_kprintf                             0x300010ac   Section        0  kservice.o(i.rt_kprintf)
    i.rt_list_insert_after                   0x30001168   Section        0  timer.o(i.rt_list_insert_after)
    rt_list_insert_after                     0x30001168   ARM Code      28  timer.o(i.rt_list_insert_after)
    i.rt_list_isempty                        0x30001184   Section        0  timer.o(i.rt_list_isempty)
    rt_list_isempty                          0x30001184   ARM Code      32  timer.o(i.rt_list_isempty)
    i.rt_list_remove                         0x300011a4   Section        0  thread.o(i.rt_list_remove)
    rt_list_remove                           0x300011a4   ARM Code      32  thread.o(i.rt_list_remove)
    i.rt_memset                              0x300011c4   Section        0  kservice.o(i.rt_memset)
    i.rt_schedule                            0x30001248   Section        0  scheduler.o(i.rt_schedule)
    i.rt_serial0_handler                     0x30001350   Section        0  board.o(i.rt_serial0_handler)
    rt_serial0_handler                       0x30001350   ARM Code      84  board.o(i.rt_serial0_handler)
    i.rt_serial2_handler                     0x300013a8   Section        0  board.o(i.rt_serial2_handler)
    rt_serial2_handler                       0x300013a8   ARM Code      84  board.o(i.rt_serial2_handler)
    i.rt_serial_savechar                     0x30001400   Section        0  serial.o(i.rt_serial_savechar)
    rt_serial_savechar                       0x30001400   ARM Code     168  serial.o(i.rt_serial_savechar)
    i.rt_set_errno                           0x300014a8   Section        0  kservice.o(i.rt_set_errno)
    i.rt_show_version                        0x300014f8   Section        0  kservice.o(i.rt_show_version)
    i.rt_strlen                              0x300015c0   Section        0  kservice.o(i.rt_strlen)
    i.rt_strncpy                             0x300015e4   Section        0  kservice.o(i.rt_strncpy)
    i.rt_thread_self                         0x3000164c   Section        0  thread.o(i.rt_thread_self)
    i.rt_thread_yield                        0x3000165c   Section        0  thread.o(i.rt_thread_yield)
    i.rt_tick_get                            0x300016f0   Section        0  clock.o(i.rt_tick_get)
    i.rt_tick_increase                       0x30001700   Section        0  clock.o(i.rt_tick_increase)
    i.rt_timer_check                         0x30001754   Section        0  timer.o(i.rt_timer_check)
    i.rt_timer_handler                       0x3000184c   Section        0  board.o(i.rt_timer_handler)
    rt_timer_handler                         0x3000184c   ARM Code      24  board.o(i.rt_timer_handler)
    i.rt_timer_start                         0x30001864   Section        0  timer.o(i.rt_timer_start)
    i.rt_vsnprintf                           0x30001a10   Section        0  kservice.o(i.rt_vsnprintf)
    i.skip_atoi                              0x30002004   Section        0  kservice.o(i.skip_atoi)
    skip_atoi                                0x30002004   ARM Code      64  kservice.o(i.skip_atoi)
    .constdata                               0x30002044   Section      613  kservice.o(.constdata)
    small_digits                             0x30002287   Data          17  kservice.o(.constdata)
    large_digits                             0x30002298   Data          17  kservice.o(.constdata)
    .data                                    0x300022bc   Section        4  clock.o(.data)
    rt_tick                                  0x300022bc   Data           4  clock.o(.data)
    .data                                    0x300022c0   Section        1  irq.o(.data)
    .data                                    0x300022c4   Section        8  kservice.o(.data)
    _errno                                   0x300022c4   Data           4  kservice.o(.data)
    _console_device                          0x300022c8   Data           4  kservice.o(.data)
    .data                                    0x300022cc   Section      180  object.o(.data)
    rt_object_attach_hook                    0x3000236c   Data           4  object.o(.data)
    rt_object_detach_hook                    0x30002370   Data           4  object.o(.data)
    .data                                    0x30002380   Section       28  scheduler.o(.data)
    rt_scheduler_lock_nest                   0x30002380   Data           2  scheduler.o(.data)
    rt_scheduler_hook                        0x30002398   Data           4  scheduler.o(.data)
    .data                                    0x3000239c   Section       16  timer.o(.data)
    rt_timer_list                            0x3000239c   Data           8  timer.o(.data)
    rt_timer_timeout_hook                    0x300023a4   Data           4  timer.o(.data)
    random_nr                                0x300023a8   Data           4  timer.o(.data)
    .data                                    0x300023ac   Section       12  interrupt.o(.data)
    .data                                    0x300023b8   Section       24  board.o(.data)
    .data                                    0x300023d0   Section       16  system_clock.o(.data)
    .bss                                     0x300023e0   Section      128  kservice.o(.bss)
    rt_log_buf                               0x300023e0   Data         128  kservice.o(.bss)
    .bss                                     0x30002460   Section     2080  scheduler.o(.bss)
    .bss                                     0x30002c80   Section     1408  interrupt.o(.bss)
    .bss                                     0x30003200   Section      328  board.o(.bss)
    .bss                                     0x30003348   Section       96  libspace.o(.bss)
    HEAP                                     0x300033a8   Section        0  start.o(HEAP)
    STACK                                    0x300033a8   Section     1160  start.o(STACK)
    Heap_Mem                                 0x300033a8   Data           0  start.o(HEAP)
    Stack_Mem                                0x300033a8   Data        1024  start.o(STACK)
    Stack_Top                                0x30003830   Data           0  start.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    RTMSymTab$$Base                           - Undefined Reference
    RTMSymTab$$Limit                          - Undefined Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    IRQ_Handler                              0x3000004c   ARM Code       4  start.o(RESET)
    Reset_Handler                            0x30000054   ARM Code       0  start.o(RESET)
    __main                                   0x300000ac   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x300000b4   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x300000b4   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x300000c8   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x300000f0   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x3000011c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x30000125   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x30000127   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x30000134   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x3000013d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x30000141   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x30000148   ARM Code       0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x30000148   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x30000148   ARM Code       0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x30000150   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x30000150   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x30000154   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x30000154   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x3000017d   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x30000180   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x30000184   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x30000184   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x30000188   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x30000190   ARM Code       0  start.o(.text)
    rt_hw_interrupt_disable                  0x300001b0   ARM Code      16  context.o(.text)
    rt_hw_interrupt_enable                   0x300001c0   ARM Code       8  context.o(.text)
    rt_hw_context_switch                     0x300001c8   ARM Code      52  context.o(.text)
    rt_hw_context_switch_to                  0x300001fc   ARM Code      24  context.o(.text)
    rt_hw_context_switch_interrupt           0x30000214   ARM Code      44  context.o(.text)
    __aeabi_idiv                             0x3000024c   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x3000024c   ARM Code     384  aeabi_sdiv.o(.text)
    __user_setup_stackheap                   0x300003cc   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x3000042d   Thumb Code    12  exit.o(.text)
    __user_libspace                          0x30000438   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x30000438   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x30000438   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x30000444   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x3000044d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x30000458   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x30000458   ARM Code       4  use_no_semi.o(.text)
    __aeabi_uidiv                            0x3000045c   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x3000045c   ARM Code      36  aeabi_sdiv.o(.text_udiv)
    __semihosting_library_function           0x3000045c   ARM Code       0  indicate_semi.o(.text)
    __rt_ffs                                 0x30000480   ARM Code     132  kservice.o(i.__rt_ffs)
    main                                     0x30000634   ARM Code      40  main.o(i.main)
    rt_device_write                          0x300008d4   ARM Code     112  device.o(i.rt_device_write)
    rt_hw_board_init                         0x30000944   ARM Code      28  board.o(i.rt_hw_board_init)
    rt_hw_clock_init                         0x30000960   ARM Code      68  system_clock.o(i.rt_hw_clock_init)
    rt_hw_console_output                     0x300009a4   ARM Code       4  kservice.o(i.rt_hw_console_output)
    rt_hw_cpu_dcache_enable                  0x300009a8   ARM Code      20  cpu.o(i.rt_hw_cpu_dcache_enable)
    rt_hw_cpu_icache_enable                  0x300009bc   ARM Code      20  cpu.o(i.rt_hw_cpu_icache_enable)
    rt_hw_get_clock                          0x300009d0   ARM Code     388  system_clock.o(i.rt_hw_get_clock)
    rt_hw_interrupt_init                     0x30000ba8   ARM Code     148  interrupt.o(i.rt_hw_interrupt_init)
    rt_hw_interrupt_install                  0x30000c54   ARM Code     132  interrupt.o(i.rt_hw_interrupt_install)
    rt_hw_interrupt_umask                    0x30000cdc   ARM Code      88  interrupt.o(i.rt_hw_interrupt_umask)
    rt_hw_serial_isr                         0x30000d54   ARM Code     176  serial.o(i.rt_hw_serial_isr)
    rt_hw_set_divider                        0x30000e04   ARM Code      16  system_clock.o(i.rt_hw_set_divider)
    rt_hw_set_mpll_clock                     0x30000e14   ARM Code      20  system_clock.o(i.rt_hw_set_mpll_clock)
    rt_hw_set_upll_clock                     0x30000e28   ARM Code      24  system_clock.o(i.rt_hw_set_upll_clock)
    rt_interrupt_get_nest                    0x3000109c   ARM Code      12  irq.o(i.rt_interrupt_get_nest)
    rt_kprintf                               0x300010ac   ARM Code     180  kservice.o(i.rt_kprintf)
    rt_memset                                0x300011c4   ARM Code     132  kservice.o(i.rt_memset)
    rt_schedule                              0x30001248   ARM Code     232  scheduler.o(i.rt_schedule)
    rt_set_errno                             0x300014a8   ARM Code      76  kservice.o(i.rt_set_errno)
    rt_show_version                          0x300014f8   ARM Code      64  kservice.o(i.rt_show_version)
    rt_strlen                                0x300015c0   ARM Code      36  kservice.o(i.rt_strlen)
    rt_strncpy                               0x300015e4   ARM Code     104  kservice.o(i.rt_strncpy)
    rt_thread_self                           0x3000164c   ARM Code      12  thread.o(i.rt_thread_self)
    rt_thread_yield                          0x3000165c   ARM Code     140  thread.o(i.rt_thread_yield)
    rt_tick_get                              0x300016f0   ARM Code      12  clock.o(i.rt_tick_get)
    rt_tick_increase                         0x30001700   ARM Code      80  clock.o(i.rt_tick_increase)
    rt_timer_check                           0x30001754   ARM Code     240  timer.o(i.rt_timer_check)
    rt_timer_start                           0x30001864   ARM Code     416  timer.o(i.rt_timer_start)
    rt_vsnprintf                             0x30001a10   ARM Code    1524  kservice.o(i.rt_vsnprintf)
    __rtmsym_rt_get_errno_name               0x30002044   Data          13  kservice.o(.constdata)
    __rtmsym_rt_set_errno_name               0x30002051   Data          13  kservice.o(.constdata)
    __rtmsym__rt_errno_name                  0x3000205e   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memset_name                  0x30002068   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memcpy_name                  0x30002072   Data          10  kservice.o(.constdata)
    __rtmsym_rt_memmove_name                 0x3000207c   Data          11  kservice.o(.constdata)
    __rtmsym_rt_memcmp_name                  0x30002087   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strstr_name                  0x30002091   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strcasecmp_name              0x3000209b   Data          14  kservice.o(.constdata)
    __rtmsym_rt_strncpy_name                 0x300020a9   Data          11  kservice.o(.constdata)
    __rtmsym_rt_strncmp_name                 0x300020b4   Data          11  kservice.o(.constdata)
    __rtmsym_rt_strcmp_name                  0x300020bf   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strlen_name                  0x300020c9   Data          10  kservice.o(.constdata)
    __rtmsym_rt_strdup_name                  0x300020d3   Data          10  kservice.o(.constdata)
    __rtmsym_rt_show_version_name            0x300020dd   Data          16  kservice.o(.constdata)
    __rtmsym_rt_vsnprintf_name               0x300020ed   Data          13  kservice.o(.constdata)
    __rtmsym_rt_snprintf_name                0x300020fa   Data          12  kservice.o(.constdata)
    __rtmsym_rt_vsprintf_name                0x30002106   Data          12  kservice.o(.constdata)
    __rtmsym_rt_sprintf_name                 0x30002112   Data          11  kservice.o(.constdata)
    __rtmsym_rt_console_get_device_name      0x3000211d   Data          22  kservice.o(.constdata)
    __rtmsym_rt_console_set_device_name      0x30002133   Data          22  kservice.o(.constdata)
    __rtmsym_rt_hw_console_output_name       0x30002149   Data          21  kservice.o(.constdata)
    __rtmsym_rt_kprintf_name                 0x3000215e   Data          11  kservice.o(.constdata)
    __rtmsym_rt_malloc_align_name            0x30002169   Data          16  kservice.o(.constdata)
    __rtmsym_rt_free_align_name              0x30002179   Data          14  kservice.o(.constdata)
    __lowest_bit_bitmap                      0x30002187   Data         256  kservice.o(.constdata)
    Region$$Table$$Base                      0x300022ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x300022bc   Number         0  anon$$obj.o(Region$$Table)
    rt_interrupt_nest                        0x300022c0   Data           1  irq.o(.data)
    rt_object_container                      0x300022cc   Data         160  object.o(.data)
    rt_object_trytake_hook                   0x30002374   Data           4  object.o(.data)
    rt_object_take_hook                      0x30002378   Data           4  object.o(.data)
    rt_object_put_hook                       0x3000237c   Data           4  object.o(.data)
    rt_current_thread                        0x30002384   Data           4  scheduler.o(.data)
    rt_current_priority                      0x30002388   Data           1  scheduler.o(.data)
    rt_thread_ready_priority_group           0x3000238c   Data           4  scheduler.o(.data)
    rt_thread_defunct                        0x30002390   Data           8  scheduler.o(.data)
    rt_interrupt_from_thread                 0x300023ac   Data           4  interrupt.o(.data)
    rt_interrupt_to_thread                   0x300023b0   Data           4  interrupt.o(.data)
    rt_thread_switch_interrupt_flag          0x300023b4   Data           4  interrupt.o(.data)
    uart0                                    0x300023b8   Data          12  board.o(.data)
    uart2                                    0x300023c4   Data          12  board.o(.data)
    PCLK                                     0x300023d0   Data           4  system_clock.o(.data)
    FCLK                                     0x300023d4   Data           4  system_clock.o(.data)
    HCLK                                     0x300023d8   Data           4  system_clock.o(.data)
    UCLK                                     0x300023dc   Data           4  system_clock.o(.data)
    rt_thread_priority_table                 0x30002460   Data        2048  scheduler.o(.bss)
    rt_thread_ready_table                    0x30002c60   Data          32  scheduler.o(.bss)
    isr_table                                0x30002c80   Data        1408  interrupt.o(.bss)
    uart0_int_rx                             0x30003200   Data          72  board.o(.bss)
    uart0_device                             0x30003248   Data          92  board.o(.bss)
    uart2_int_rx                             0x300032a4   Data          72  board.o(.bss)
    uart2_device                             0x300032ec   Data          92  board.o(.bss)
    __libspace_start                         0x30003348   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x300033a8   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x300000ac

  Load Region LR_IROM1 (Base: 0x30000000, Size: 0x000023e0, Max: 0x01000000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x30000000, Size: 0x000022bc, Max: 0x00200000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x30000000   0x000000ac   Code   RO            4    RESET               start.o
    0x300000ac   0x00000008   Code   RO         1765  * !!!main             c_t.l(__main.o)
    0x300000b4   0x0000003c   Code   RO         1933    !!!scatter          c_t.l(__scatter.o)
    0x300000f0   0x0000002c   Code   RO         1935    !!handler_zi        c_t.l(__scatter_zi.o)
    0x3000011c   0x00000008   Ven    RO         1802    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x30000124   0x00000002   Code   RO         1802    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x30000126   0x00000000   Code   RO         1815    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1817    .ARM.Collect$$libinit$$00000004  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1820    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1822    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1824    .ARM.Collect$$libinit$$0000000E  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1827    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1829    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1831    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1833    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1835    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1837    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1839    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1841    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1843    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1845    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1847    .ARM.Collect$$libinit$$00000025  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1851    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1853    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1855    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x30000126   0x00000000   Code   RO         1857    .ARM.Collect$$libinit$$00000032  c_t.l(libinit2.o)
    0x30000126   0x0000000c   Code   RO         1858    .ARM.Collect$$libinit$$00000033  c_t.l(libinit2.o)
    0x30000132   0x00000002   PAD
    0x30000134   0x00000008   Ven    RO         1891    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x3000013c   0x00000004   Code   RO         1891    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x30000140   0x00000000   Code   RO         1918    .ARM.Collect$$libshutdown$$00000003  c_t.l(libshutdown2.o)
    0x30000140   0x00000000   Code   RO         1921    .ARM.Collect$$libshutdown$$00000006  c_t.l(libshutdown2.o)
    0x30000140   0x00000000   Code   RO         1924    .ARM.Collect$$libshutdown$$00000009  c_t.l(libshutdown2.o)
    0x30000140   0x00000000   Code   RO         1926    .ARM.Collect$$libshutdown$$0000000B  c_t.l(libshutdown2.o)
    0x30000140   0x00000000   Code   RO         1929    .ARM.Collect$$libshutdown$$0000000E  c_t.l(libshutdown2.o)
    0x30000140   0x00000006   Code   RO         1930    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x30000146   0x00000002   PAD
    0x30000148   0x00000000   Code   RO         1767    .ARM.Collect$$rtentry$$00000000  c_t.l(__rtentry.o)
    0x30000148   0x00000000   Code   RO         1773    .ARM.Collect$$rtentry$$00000002  c_t.l(__rtentry2.o)
    0x30000148   0x00000008   Code   RO         1785    .ARM.Collect$$rtentry$$00000004  c_t.l(__rtentry4.o)
    0x30000150   0x00000000   Code   RO         1775    .ARM.Collect$$rtentry$$00000009  c_t.l(__rtentry2.o)
    0x30000150   0x00000004   Code   RO         1776    .ARM.Collect$$rtentry$$0000000A  c_t.l(__rtentry2.o)
    0x30000154   0x00000000   Code   RO         1778    .ARM.Collect$$rtentry$$0000000C  c_t.l(__rtentry2.o)
    0x30000154   0x00000028   Code   RO         1779    .ARM.Collect$$rtentry$$0000000D  c_t.l(__rtentry2.o)
    0x3000017c   0x00000004   Ven    RO         1806    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x30000180   0x00000004   Code   RO         1806    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x30000184   0x00000000   Code   RO         1862    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x30000184   0x00000004   Code   RO         1863    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x30000188   0x00000008   Code   RO         1864    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x30000190   0x00000020   Code   RO            5    .text               start.o
    0x300001b0   0x0000009c   Code   RO         1370    .text               context.o
    0x3000024c   0x00000180   Code   RO         1749    .text               c_t.l(aeabi_sdiv.o)
    0x300003cc   0x00000060   Code   RO         1789    .text               c_t.l(sys_stackheap_outer.o)
    0x3000042c   0x0000000c   Code   RO         1791    .text               c_t.l(exit.o)
    0x30000438   0x0000000c   Code   RO         1803    .text               c_t.l(libspace.o)
    0x30000444   0x00000008   Ven    RO         1859    .text               c_t.l(sys_exit.o)
    0x3000044c   0x0000000c   Code   RO         1859    .text               c_t.l(sys_exit.o)
    0x30000458   0x00000004   Code   RO         1880    .text               c_t.l(use_no_semi.o)
    0x3000045c   0x00000000   Code   RO         1882    .text               c_t.l(indicate_semi.o)
    0x3000045c   0x00000024   Code   RO         1750    .text_udiv          c_t.l(aeabi_sdiv.o)
    0x30000480   0x00000088   Code   RO          509    i.__rt_ffs          kservice.o
    0x30000508   0x000000d0   Code   RO         1042    i._rt_scheduler_stack_check  scheduler.o
    0x300005d8   0x0000004c   Code   RO         1245    i._rt_timer_remove  timer.o
    0x30000624   0x00000010   Code   RO         1430    i.cache_enable      cpu.o
    0x30000634   0x00000028   Code   RO         1361    i.main              main.o
    0x3000065c   0x00000278   Code   RO          511    i.print_number      kservice.o
    0x300008d4   0x00000070   Code   RO           90    i.rt_device_write   device.o
    0x30000944   0x0000001c   Code   RO         1493    i.rt_hw_board_init  board.o
    0x30000960   0x00000044   Code   RO         1612    i.rt_hw_clock_init  system_clock.o
    0x300009a4   0x00000004   Code   RO          516    i.rt_hw_console_output  kservice.o
    0x300009a8   0x00000014   Code   RO         1432    i.rt_hw_cpu_dcache_enable  cpu.o
    0x300009bc   0x00000014   Code   RO         1435    i.rt_hw_cpu_icache_enable  cpu.o
    0x300009d0   0x00000194   Code   RO         1613    i.rt_hw_get_clock   system_clock.o
    0x30000b64   0x00000044   Code   RO         1374    i.rt_hw_interrupt_handle  interrupt.o
    0x30000ba8   0x000000ac   Code   RO         1375    i.rt_hw_interrupt_init  interrupt.o
    0x30000c54   0x00000088   Code   RO         1376    i.rt_hw_interrupt_install  interrupt.o
    0x30000cdc   0x00000078   Code   RO         1378    i.rt_hw_interrupt_umask  interrupt.o
    0x30000d54   0x000000b0   Code   RO         1553    i.rt_hw_serial_isr  serial.o
    0x30000e04   0x00000010   Code   RO         1614    i.rt_hw_set_divider  system_clock.o
    0x30000e14   0x00000014   Code   RO         1615    i.rt_hw_set_mpll_clock  system_clock.o
    0x30000e28   0x00000018   Code   RO         1616    i.rt_hw_set_upll_clock  system_clock.o
    0x30000e40   0x000000c4   Code   RO         1494    i.rt_hw_timer_init  board.o
    0x30000f04   0x00000198   Code   RO         1495    i.rt_hw_uart_init   board.o
    0x3000109c   0x00000010   Code   RO          481    i.rt_interrupt_get_nest  irq.o
    0x300010ac   0x000000bc   Code   RO          517    i.rt_kprintf        kservice.o
    0x30001168   0x0000001c   Code   RO         1247    i.rt_list_insert_after  timer.o
    0x30001184   0x00000020   Code   RO         1248    i.rt_list_isempty   timer.o
    0x300011a4   0x00000020   Code   RO         1128    i.rt_list_remove    thread.o
    0x300011c4   0x00000084   Code   RO          522    i.rt_memset         kservice.o
    0x30001248   0x00000108   Code   RO         1047    i.rt_schedule       scheduler.o
    0x30001350   0x00000058   Code   RO         1496    i.rt_serial0_handler  board.o
    0x300013a8   0x00000058   Code   RO         1497    i.rt_serial2_handler  board.o
    0x30001400   0x000000a8   Code   RO         1560    i.rt_serial_savechar  serial.o
    0x300014a8   0x00000050   Code   RO          523    i.rt_set_errno      kservice.o
    0x300014f8   0x000000c8   Code   RO          524    i.rt_show_version   kservice.o
    0x300015c0   0x00000024   Code   RO          530    i.rt_strlen         kservice.o
    0x300015e4   0x00000068   Code   RO          532    i.rt_strncpy        kservice.o
    0x3000164c   0x00000010   Code   RO         1138    i.rt_thread_self    thread.o
    0x3000165c   0x00000094   Code   RO         1143    i.rt_thread_yield   thread.o
    0x300016f0   0x00000010   Code   RO           15    i.rt_tick_get       clock.o
    0x30001700   0x00000054   Code   RO           16    i.rt_tick_increase  clock.o
    0x30001754   0x000000f8   Code   RO         1251    i.rt_timer_check    timer.o
    0x3000184c   0x00000018   Code   RO         1498    i.rt_timer_handler  board.o
    0x30001864   0x000001ac   Code   RO         1259    i.rt_timer_start    timer.o
    0x30001a10   0x000005f4   Code   RO          534    i.rt_vsnprintf      kservice.o
    0x30002004   0x00000040   Code   RO          536    i.skip_atoi         kservice.o
    0x30002044   0x00000265   Data   RO          538    .constdata          kservice.o
    0x300022a9   0x00000003   PAD
    0x300022ac   0x00000010   Data   RO         1931    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x300022bc, Size: 0x00000124, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x300022bc   0x00000004   Data   RW           19    .data               clock.o
    0x300022c0   0x00000001   Data   RW          484    .data               irq.o
    0x300022c1   0x00000003   PAD
    0x300022c4   0x00000008   Data   RW          539    .data               kservice.o
    0x300022cc   0x000000b4   Data   RW          956    .data               object.o
    0x30002380   0x0000001c   Data   RW         1054    .data               scheduler.o
    0x3000239c   0x00000010   Data   RW         1263    .data               timer.o
    0x300023ac   0x0000000c   Data   RW         1380    .data               interrupt.o
    0x300023b8   0x00000018   Data   RW         1500    .data               board.o
    0x300023d0   0x00000010   Data   RW         1617    .data               system_clock.o


    Execution Region ER_ZI (Base: 0x300023e0, Size: 0x00001450, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x300023e0   0x00000080   Zero   RW          537    .bss                kservice.o
    0x30002460   0x00000820   Zero   RW         1053    .bss                scheduler.o
    0x30002c80   0x00000580   Zero   RW         1379    .bss                interrupt.o
    0x30003200   0x00000148   Zero   RW         1499    .bss                board.o
    0x30003348   0x00000060   Zero   RW         1804    .bss                c_t.l(libspace.o)
    0x300033a8   0x00000000   Zero   RW            3    HEAP                start.o
    0x300033a8   0x00000488   Zero   RW            2    STACK               start.o


    Execution Region ER_MMU (Base: 0x33ff0000, Size: 0x00100000, Max: 0x00100000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x33ff0000   0x00100000   Zero   RW            1    ER_MMU.bss          anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       832         68          0         24        328      13173   board.o
       100          8          0          4          0      13855   clock.o
       156         12          0          0          0        572   context.o
        56          0          0          0          0       1800   cpu.o
       112          0          0          0          0        750   device.o
       496         96          0         12       1408       3153   interrupt.o
        16          4          0          1          0       1957   irq.o
      3100        168        613          8        128      13699   kservice.o
        40          0          0          0          0        439   main.o
         0          0          0        180          0       1255   object.o
       472        116          0         28       2080       2430   scheduler.o
       344          0          0          0          0       2379   serial.o
       204         52          0          0       1160        700   start.o
       532         16          0         16          0       2989   system_clock.o
       196         12          0          0          0       2367   thread.o
       812         20          0         16          0       5702   timer.o

    ----------------------------------------------------------------------
      7468        572        632        292    1053680      67220   Object Totals
         0          0         16          0    1048576          0   (incl. Generated)
         0          0          3          3          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        44          4          0          0          0          0   __rtentry2.o
         8          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        44          0          0          0          0          0   __scatter_zi.o
       420          0          0          0          0        148   aeabi_sdiv.o
        12          0          0          0          0         64   exit.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       792         20          0          0         96        556   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       788         20          0          0         96        556   c_t.l

    ----------------------------------------------------------------------
       792         20          0          0         96        556   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8260        592        632        292    1053776      65268   Grand Totals
      8260        592        632        292    1053776      65268   ELF Image Totals
      8260        592        632        292          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8892 (   8.68kB)
    Total RW  Size (RW Data + ZI Data)           1054068 (1029.36kB)
    Total ROM Size (Code + RO Data + RW Data)       9184 (   8.97kB)

==============================================================================

